{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TransferCirculate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TransferLocking",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DECIMALS",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_SUPPLY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "5": "contracts/VegaToken.sol"
  },
  "ast": {
    "absolutePath": "contracts/VegaToken.sol",
    "exportedSymbols": {
      "IERC20": [
        128
      ],
      "VegaToken": [
        720
      ]
    },
    "id": 721,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 362,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:5"
      },
      {
        "absolutePath": "contracts/IERC20.sol",
        "file": "./IERC20.sol",
        "id": 363,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 721,
        "sourceUnit": 129,
        "src": "58:22:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 364,
              "name": "IERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 128,
              "src": "569:6:5"
            },
            "id": 365,
            "nodeType": "InheritanceSpecifier",
            "src": "569:6:5"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 720,
        "linearizedBaseContracts": [
          720,
          128
        ],
        "name": "VegaToken",
        "nameLocation": "556:9:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "2e0f2625",
            "id": 368,
            "mutability": "constant",
            "name": "DECIMALS",
            "nameLocation": "604:8:5",
            "nodeType": "VariableDeclaration",
            "scope": 720,
            "src": "582:35:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 366,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "582:5:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "3138",
              "id": 367,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "615:2:5",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "32cb6b0c",
            "id": 378,
            "mutability": "constant",
            "name": "MAX_SUPPLY",
            "nameLocation": "648:10:5",
            "nodeType": "VariableDeclaration",
            "scope": 720,
            "src": "624:59:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 369,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "624:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 377,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_1000000000_by_1",
                  "typeString": "int_const 1000000000"
                },
                "id": 372,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "3130",
                  "id": 370,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "661:2:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_10_by_1",
                    "typeString": "int_const 10"
                  },
                  "value": "10"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "hexValue": "39",
                  "id": 371,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "665:1:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_9_by_1",
                    "typeString": "int_const 9"
                  },
                  "value": "9"
                },
                "src": "661:5:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000000_by_1",
                  "typeString": "int_const 1000000000"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "components": [
                  {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 373,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "670:2:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "id": 374,
                      "name": "DECIMALS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 368,
                      "src": "674:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "670:12:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 376,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "669:14:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "661:22:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 381,
            "mutability": "constant",
            "name": "_name",
            "nameLocation": "714:5:5",
            "nodeType": "VariableDeclaration",
            "scope": 720,
            "src": "690:43:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 379,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "690:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "56656761546f6b656e",
              "id": 380,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "722:11:5",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_cb599ded12ec16fbb3104577c82287a143ab7bb5bb43bcd1c8f70802737c4cf9",
                "typeString": "literal_string \"VegaToken\""
              },
              "value": "VegaToken"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 384,
            "mutability": "constant",
            "name": "_symbol",
            "nameLocation": "763:7:5",
            "nodeType": "VariableDeclaration",
            "scope": 720,
            "src": "739:40:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 382,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "739:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "56454741",
              "id": 383,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "773:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_f168531bf60bc026a038a73cc9822ee49cb182285f3ba3b595bdcb1e42f31f07",
                "typeString": "literal_string \"VEGA\""
              },
              "value": "VEGA"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 386,
            "mutability": "mutable",
            "name": "_owner",
            "nameLocation": "802:6:5",
            "nodeType": "VariableDeclaration",
            "scope": 720,
            "src": "786:22:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 385,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "786:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 390,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "851:9:5",
            "nodeType": "VariableDeclaration",
            "scope": 720,
            "src": "815:45:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 389,
              "keyType": {
                "id": 387,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "823:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "815:27:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 388,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "834:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 396,
            "mutability": "mutable",
            "name": "_allowances",
            "nameLocation": "923:11:5",
            "nodeType": "VariableDeclaration",
            "scope": 720,
            "src": "867:67:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 395,
              "keyType": {
                "id": 391,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "875:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "867:47:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 394,
                "keyType": {
                  "id": 392,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "894:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "886:27:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 393,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "905:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 398,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nameLocation": "978:12:5",
            "nodeType": "VariableDeclaration",
            "scope": 720,
            "src": "962:28:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 397,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "962:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 406,
            "name": "TransferCirculate",
            "nameLocation": "1138:17:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 405,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 400,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1181:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 406,
                  "src": "1165:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 399,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1165:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 402,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1211:2:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 406,
                  "src": "1195:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 401,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1195:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 404,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1231:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 406,
                  "src": "1223:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 403,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1223:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1155:87:5"
            },
            "src": "1132:111:5"
          },
          {
            "anonymous": false,
            "id": 414,
            "name": "TransferLocking",
            "nameLocation": "1254:15:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 413,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 408,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1295:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 414,
                  "src": "1279:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 407,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1279:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 410,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1325:2:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 414,
                  "src": "1309:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 409,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1309:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 412,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1345:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 414,
                  "src": "1337:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 411,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1337:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1269:87:5"
            },
            "src": "1248:109:5"
          },
          {
            "body": {
              "id": 442,
              "nodeType": "Block",
              "src": "1504:377:5",
              "statements": [
                {
                  "expression": {
                    "id": 421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 418,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 386,
                      "src": "1514:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 419,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1523:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1523:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1514:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 422,
                  "nodeType": "ExpressionStatement",
                  "src": "1514:19:5"
                },
                {
                  "expression": {
                    "id": 425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 423,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 398,
                      "src": "1689:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 424,
                      "name": "MAX_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 378,
                      "src": "1704:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1689:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 426,
                  "nodeType": "ExpressionStatement",
                  "src": "1689:25:5"
                },
                {
                  "expression": {
                    "id": 431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 427,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 390,
                        "src": "1724:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 429,
                      "indexExpression": {
                        "id": 428,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 386,
                        "src": "1734:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1724:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 430,
                      "name": "MAX_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 378,
                      "src": "1744:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1724:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 432,
                  "nodeType": "ExpressionStatement",
                  "src": "1724:30:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 436,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1786:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1778:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 434,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1778:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1778:10:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 438,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 386,
                        "src": "1790:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 439,
                        "name": "MAX_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 378,
                        "src": "1798:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 433,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "1769:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1769:40:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 441,
                  "nodeType": "EmitStatement",
                  "src": "1764:45:5"
                }
              ]
            },
            "documentation": {
              "id": 415,
              "nodeType": "StructuredDocumentation",
              "src": "1449:36:5",
              "text": "construct token and genesis mint"
            },
            "id": 443,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1501:2:5"
            },
            "returnParameters": {
              "id": 417,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1504:0:5"
            },
            "scope": 720,
            "src": "1490:391:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 454,
              "nodeType": "Block",
              "src": "1908:93:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 446,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1926:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1926:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 448,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 386,
                          "src": "1940:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1926:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "id": 450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1948:34:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                          "typeString": "literal_string \"Ownable: caller is not the owner\""
                        },
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                          "typeString": "literal_string \"Ownable: caller is not the owner\""
                        }
                      ],
                      "id": 445,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1918:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1918:65:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 452,
                  "nodeType": "ExpressionStatement",
                  "src": "1918:65:5"
                },
                {
                  "id": 453,
                  "nodeType": "PlaceholderStatement",
                  "src": "1993:1:5"
                }
              ]
            },
            "id": 455,
            "name": "onlyOwner",
            "nameLocation": "1896:9:5",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 444,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1905:2:5"
            },
            "src": "1887:114:5",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 462,
              "nodeType": "Block",
              "src": "2067:29:5",
              "statements": [
                {
                  "expression": {
                    "id": 460,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 381,
                    "src": "2084:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 459,
                  "id": 461,
                  "nodeType": "Return",
                  "src": "2077:12:5"
                }
              ]
            },
            "functionSelector": "06fdde03",
            "id": 463,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2016:4:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 456,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2020:2:5"
            },
            "returnParameters": {
              "id": 459,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 458,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 463,
                  "src": "2052:13:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 457,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2052:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2051:15:5"
            },
            "scope": 720,
            "src": "2007:89:5",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 470,
              "nodeType": "Block",
              "src": "2164:31:5",
              "statements": [
                {
                  "expression": {
                    "id": 468,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 384,
                    "src": "2181:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 467,
                  "id": 469,
                  "nodeType": "Return",
                  "src": "2174:14:5"
                }
              ]
            },
            "functionSelector": "95d89b41",
            "id": 471,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "2111:6:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 464,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2117:2:5"
            },
            "returnParameters": {
              "id": 467,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 466,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 471,
                  "src": "2149:13:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 465,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2149:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2148:15:5"
            },
            "scope": 720,
            "src": "2102:93:5",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 478,
              "nodeType": "Block",
              "src": "2257:32:5",
              "statements": [
                {
                  "expression": {
                    "id": 476,
                    "name": "DECIMALS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 368,
                    "src": "2274:8:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 475,
                  "id": 477,
                  "nodeType": "Return",
                  "src": "2267:15:5"
                }
              ]
            },
            "functionSelector": "313ce567",
            "id": 479,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "2210:8:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 472,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2218:2:5"
            },
            "returnParameters": {
              "id": 475,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 474,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 479,
                  "src": "2250:5:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 473,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2250:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2249:7:5"
            },
            "scope": 720,
            "src": "2201:88:5",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              66
            ],
            "body": {
              "id": 487,
              "nodeType": "Block",
              "src": "2365:36:5",
              "statements": [
                {
                  "expression": {
                    "id": 485,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 398,
                    "src": "2382:12:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 484,
                  "id": 486,
                  "nodeType": "Return",
                  "src": "2375:19:5"
                }
              ]
            },
            "functionSelector": "18160ddd",
            "id": 488,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "2304:11:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 481,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2338:8:5"
            },
            "parameters": {
              "id": 480,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2315:2:5"
            },
            "returnParameters": {
              "id": 484,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 483,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 488,
                  "src": "2356:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 482,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2356:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2355:9:5"
            },
            "scope": 720,
            "src": "2295:106:5",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              73
            ],
            "body": {
              "id": 500,
              "nodeType": "Block",
              "src": "2765:42:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 496,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 390,
                      "src": "2782:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 498,
                    "indexExpression": {
                      "id": 497,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 490,
                      "src": "2792:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2782:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 495,
                  "id": 499,
                  "nodeType": "Return",
                  "src": "2775:25:5"
                }
              ]
            },
            "functionSelector": "70a08231",
            "id": 501,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "2647:9:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 492,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2726:8:5"
            },
            "parameters": {
              "id": 491,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 490,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2665:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 501,
                  "src": "2657:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 489,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2657:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2656:17:5"
            },
            "returnParameters": {
              "id": 495,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 494,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 501,
                  "src": "2752:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 493,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2752:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2751:9:5"
            },
            "scope": 720,
            "src": "2638:169:5",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              82
            ],
            "body": {
              "id": 521,
              "nodeType": "Block",
              "src": "3780:78:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 513,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3800:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3800:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 515,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 504,
                        "src": "3812:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 516,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 506,
                        "src": "3823:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 512,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 674,
                      "src": "3790:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3790:40:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 518,
                  "nodeType": "ExpressionStatement",
                  "src": "3790:40:5"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3847:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 511,
                  "id": 520,
                  "nodeType": "Return",
                  "src": "3840:11:5"
                }
              ]
            },
            "documentation": {
              "id": 502,
              "nodeType": "StructuredDocumentation",
              "src": "3490:157:5",
              "text": " Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
            },
            "functionSelector": "a9059cbb",
            "id": 522,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "3661:8:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 508,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3744:8:5"
            },
            "parameters": {
              "id": 507,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 504,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "3678:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 522,
                  "src": "3670:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 503,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3670:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 506,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3697:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 522,
                  "src": "3689:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 505,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3689:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3669:35:5"
            },
            "returnParameters": {
              "id": 511,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 510,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 522,
                  "src": "3770:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 509,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3770:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3769:6:5"
            },
            "scope": 720,
            "src": "3652:206:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              91
            ],
            "body": {
              "id": 539,
              "nodeType": "Block",
              "src": "4058:51:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 533,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 396,
                        "src": "4075:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 535,
                      "indexExpression": {
                        "id": 534,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 525,
                        "src": "4087:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4075:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 537,
                    "indexExpression": {
                      "id": 536,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 527,
                      "src": "4094:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4075:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 532,
                  "id": 538,
                  "nodeType": "Return",
                  "src": "4068:34:5"
                }
              ]
            },
            "documentation": {
              "id": 523,
              "nodeType": "StructuredDocumentation",
              "src": "3864:47:5",
              "text": " @dev See {IERC20-allowance}."
            },
            "functionSelector": "dd62ed3e",
            "id": 540,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "3925:9:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 529,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4019:8:5"
            },
            "parameters": {
              "id": 528,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 525,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "3943:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 540,
                  "src": "3935:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 524,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3935:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 527,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "3958:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 540,
                  "src": "3950:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 526,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3950:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3934:32:5"
            },
            "returnParameters": {
              "id": 532,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 531,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 540,
                  "src": "4045:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 530,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4045:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4044:9:5"
            },
            "scope": 720,
            "src": "3916:193:5",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              100
            ],
            "body": {
              "id": 560,
              "nodeType": "Block",
              "src": "4372:75:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 552,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4391:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4391:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 554,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 543,
                        "src": "4403:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 555,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 545,
                        "src": "4412:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 551,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 719,
                      "src": "4382:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4382:37:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 557,
                  "nodeType": "ExpressionStatement",
                  "src": "4382:37:5"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4436:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 550,
                  "id": 559,
                  "nodeType": "Return",
                  "src": "4429:11:5"
                }
              ]
            },
            "documentation": {
              "id": 541,
              "nodeType": "StructuredDocumentation",
              "src": "4115:127:5",
              "text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "095ea7b3",
            "id": 561,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "4256:7:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 547,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4336:8:5"
            },
            "parameters": {
              "id": 546,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 543,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "4272:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 561,
                  "src": "4264:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 542,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4264:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 545,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4289:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 561,
                  "src": "4281:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 544,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4281:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4263:33:5"
            },
            "returnParameters": {
              "id": 550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 549,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 561,
                  "src": "4362:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 548,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4362:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4361:6:5"
            },
            "scope": 720,
            "src": "4247:200:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              111
            ],
            "body": {
              "id": 608,
              "nodeType": "Block",
              "src": "5056:366:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 575,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 564,
                        "src": "5076:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 576,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 566,
                        "src": "5084:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 577,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 568,
                        "src": "5095:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 574,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 674,
                      "src": "5066:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5066:36:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 579,
                  "nodeType": "ExpressionStatement",
                  "src": "5066:36:5"
                },
                {
                  "assignments": [
                    581
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 581,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "5121:16:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 608,
                      "src": "5113:24:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 580,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5113:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 588,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 582,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 396,
                        "src": "5140:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 584,
                      "indexExpression": {
                        "id": 583,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 564,
                        "src": "5152:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5140:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 587,
                    "indexExpression": {
                      "expression": {
                        "id": 585,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "5160:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 586,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5160:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5140:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5113:58:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 590,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 581,
                          "src": "5202:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 591,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 568,
                          "src": "5222:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5202:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
                        "id": 593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5242:42:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                        },
                        "value": "ERC20: transfer amount exceeds allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                        }
                      ],
                      "id": 589,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5181:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5181:113:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 595,
                  "nodeType": "ExpressionStatement",
                  "src": "5181:113:5"
                },
                {
                  "id": 605,
                  "nodeType": "UncheckedBlock",
                  "src": "5304:90:5",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 597,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 564,
                            "src": "5337:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 598,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5345:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 599,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5345:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 602,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 600,
                              "name": "currentAllowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 581,
                              "src": "5357:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 601,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 568,
                              "src": "5376:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5357:25:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 596,
                          "name": "_approve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 719,
                          "src": "5328:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5328:55:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 604,
                      "nodeType": "ExpressionStatement",
                      "src": "5328:55:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5411:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 573,
                  "id": 607,
                  "nodeType": "Return",
                  "src": "5404:11:5"
                }
              ]
            },
            "documentation": {
              "id": 562,
              "nodeType": "StructuredDocumentation",
              "src": "4453:456:5",
              "text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
            },
            "functionSelector": "23b872dd",
            "id": 609,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "4923:12:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 570,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5032:8:5"
            },
            "parameters": {
              "id": 569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 564,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "4953:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 609,
                  "src": "4945:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 563,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4945:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 566,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "4977:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 609,
                  "src": "4969:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 565,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4969:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 568,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5004:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 609,
                  "src": "4996:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 567,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4996:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4935:81:5"
            },
            "returnParameters": {
              "id": 573,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 572,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 609,
                  "src": "5050:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 571,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5050:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5049:6:5"
            },
            "scope": 720,
            "src": "4914:508:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 673,
              "nodeType": "Block",
              "src": "6013:515:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 620,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 612,
                          "src": "6031:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 623,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6049:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 622,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6041:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 621,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6041:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6041:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6031:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                        "id": 626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6053:39:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        },
                        "value": "ERC20: transfer from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        }
                      ],
                      "id": 619,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6023:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6023:70:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 628,
                  "nodeType": "ExpressionStatement",
                  "src": "6023:70:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 630,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 614,
                          "src": "6111:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 633,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6132:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 632,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6124:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 631,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6124:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6124:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6111:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6136:37:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        },
                        "value": "ERC20: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        }
                      ],
                      "id": 629,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6103:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6103:71:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 638,
                  "nodeType": "ExpressionStatement",
                  "src": "6103:71:5"
                },
                {
                  "assignments": [
                    640
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 640,
                      "mutability": "mutable",
                      "name": "senderBalance",
                      "nameLocation": "6193:13:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 673,
                      "src": "6185:21:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 639,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6185:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 644,
                  "initialValue": {
                    "baseExpression": {
                      "id": 641,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 390,
                      "src": "6209:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 643,
                    "indexExpression": {
                      "id": 642,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 612,
                      "src": "6219:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6209:17:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6185:41:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 646,
                          "name": "senderBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 640,
                          "src": "6257:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 647,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 616,
                          "src": "6274:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6257:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                        "id": 649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6294:40:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        },
                        "value": "ERC20: transfer amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        }
                      ],
                      "id": 645,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6236:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6236:108:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 651,
                  "nodeType": "ExpressionStatement",
                  "src": "6236:108:5"
                },
                {
                  "id": 660,
                  "nodeType": "UncheckedBlock",
                  "src": "6354:77:5",
                  "statements": [
                    {
                      "expression": {
                        "id": 658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 652,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 390,
                            "src": "6378:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 654,
                          "indexExpression": {
                            "id": 653,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 612,
                            "src": "6388:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "6378:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 657,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 655,
                            "name": "senderBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 640,
                            "src": "6398:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 656,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 616,
                            "src": "6414:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6398:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6378:42:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 659,
                      "nodeType": "ExpressionStatement",
                      "src": "6378:42:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 661,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 390,
                        "src": "6440:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 663,
                      "indexExpression": {
                        "id": 662,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 614,
                        "src": "6450:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6440:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 664,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 616,
                      "src": "6464:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6440:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 666,
                  "nodeType": "ExpressionStatement",
                  "src": "6440:30:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 668,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 612,
                        "src": "6495:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 669,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 614,
                        "src": "6503:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 670,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 616,
                        "src": "6514:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 667,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "6486:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6486:35:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 672,
                  "nodeType": "EmitStatement",
                  "src": "6481:40:5"
                }
              ]
            },
            "documentation": {
              "id": 610,
              "nodeType": "StructuredDocumentation",
              "src": "5428:463:5",
              "text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
            },
            "id": 674,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "5905:9:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 617,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 612,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "5932:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 674,
                  "src": "5924:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 611,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5924:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 614,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "5956:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 674,
                  "src": "5948:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 613,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5948:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 616,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5983:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 674,
                  "src": "5975:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 615,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5975:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5914:81:5"
            },
            "returnParameters": {
              "id": 618,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6013:0:5"
            },
            "scope": 720,
            "src": "5896:632:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 718,
              "nodeType": "Block",
              "src": "7174:257:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 685,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 677,
                          "src": "7192:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 688,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7209:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 687,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7201:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 686,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7201:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7201:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7192:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
                        "id": 691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7213:38:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        },
                        "value": "ERC20: approve from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        }
                      ],
                      "id": 684,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7184:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7184:68:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 693,
                  "nodeType": "ExpressionStatement",
                  "src": "7184:68:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 695,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 679,
                          "src": "7270:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 698,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7289:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 697,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7281:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 696,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7281:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7281:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7270:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
                        "id": 701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7293:36:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        },
                        "value": "ERC20: approve to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        }
                      ],
                      "id": 694,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7262:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7262:68:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 703,
                  "nodeType": "ExpressionStatement",
                  "src": "7262:68:5"
                },
                {
                  "expression": {
                    "id": 710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 704,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 396,
                          "src": "7341:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 707,
                        "indexExpression": {
                          "id": 705,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 677,
                          "src": "7353:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7341:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 708,
                      "indexExpression": {
                        "id": 706,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 679,
                        "src": "7360:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7341:27:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 709,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 681,
                      "src": "7371:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7341:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 711,
                  "nodeType": "ExpressionStatement",
                  "src": "7341:36:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 713,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 677,
                        "src": "7401:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 714,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 679,
                        "src": "7408:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 715,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 681,
                        "src": "7417:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 712,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 127,
                      "src": "7392:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7392:32:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 717,
                  "nodeType": "EmitStatement",
                  "src": "7387:37:5"
                }
              ]
            },
            "documentation": {
              "id": 675,
              "nodeType": "StructuredDocumentation",
              "src": "6534:522:5",
              "text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n https://ethereum.stackexchange.com/questions/13523/what-is-the-zero-account-as-described-by-the-solidity-docs\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
            },
            "id": 719,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "7070:8:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 682,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 677,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "7096:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 719,
                  "src": "7088:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 676,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7088:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 679,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "7119:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 719,
                  "src": "7111:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 678,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7111:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 681,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7144:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 719,
                  "src": "7136:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 680,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7136:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7078:78:5"
            },
            "returnParameters": {
              "id": 683,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7174:0:5"
            },
            "scope": 720,
            "src": "7061:370:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 721,
        "src": "547:6886:5",
        "usedErrors": []
      }
    ],
    "src": "33:7401:5"
  },
  "bytecode": "60806040523480156200001157600080fd5b50600080546001600160a01b03191633179055620000326012600a62000126565b6200004290633b9aca00620001f4565b600355620000536012600a62000126565b6200006390633b9aca00620001f4565b600080546001600160a01b039081168252600160205260408220929092558054909116907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef620000b66012600a62000126565b620000c690633b9aca00620001f4565b60405190815260200160405180910390a36200022c565b600181815b808511156200011e57816000190482111562000102576200010262000216565b808516156200011057918102915b93841c9390800290620000e2565b509250929050565b60006200013760ff8416836200013e565b9392505050565b6000826200014f57506001620001ee565b816200015e57506000620001ee565b81600181146200017757600281146200018257620001a2565b6001915050620001ee565b60ff84111562000196576200019662000216565b50506001821b620001ee565b5060208310610133831016604e8410600b8410161715620001c7575081810a620001ee565b620001d38383620000dd565b8060001904821115620001ea57620001ea62000216565b0290505b92915050565b600081600019048311821515161562000211576200021162000216565b500290565b634e487b7160e01b600052601160045260246000fd5b61086b806200023c6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063313ce56711610071578063313ce5671461014757806332cb6b0c1461014e57806370a082311461015657806395d89b411461017f578063a9059cbb1461019f578063dd62ed3e146101b257600080fd5b806306fdde03146100ae578063095ea7b3146100e557806318160ddd1461010857806323b872dd1461011a5780632e0f26251461012d575b600080fd5b6040805180820190915260098152682b32b3b0aa37b5b2b760b91b60208201525b6040516100dc91906106a5565b60405180910390f35b6100f86100f336600461067b565b6101eb565b60405190151581526020016100dc565b6003545b6040519081526020016100dc565b6100f861012836600461063f565b610202565b610135601281565b60405160ff90911681526020016100dc565b6012610135565b61010c6102b1565b61010c6101643660046105ea565b6001600160a01b031660009081526001602052604090205490565b6040805180820190915260048152635645474160e01b60208201526100cf565b6100f86101ad36600461067b565b6102ce565b61010c6101c036600461060c565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b60006101f83384846102db565b5060015b92915050565b600061020f8484846103ff565b6001600160a01b0384166000908152600260209081526040808320338452909152902054828110156102995760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6102a685338584036102db565b506001949350505050565b6102bd6012600a610755565b6102cb90633b9aca00610800565b81565b60006101f83384846103ff565b6001600160a01b03831661033d5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610290565b6001600160a01b03821661039e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610290565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166104635760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610290565b6001600160a01b0382166104c55760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610290565b6001600160a01b0383166000908152600160205260409020548181101561053d5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610290565b6001600160a01b038085166000908152600160205260408082208585039055918516815290812080548492906105749084906106fa565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516105c091815260200190565b60405180910390a350505050565b80356001600160a01b03811681146105e557600080fd5b919050565b6000602082840312156105fc57600080fd5b610605826105ce565b9392505050565b6000806040838503121561061f57600080fd5b610628836105ce565b9150610636602084016105ce565b90509250929050565b60008060006060848603121561065457600080fd5b61065d846105ce565b925061066b602085016105ce565b9150604084013590509250925092565b6000806040838503121561068e57600080fd5b610697836105ce565b946020939093013593505050565b600060208083528351808285015260005b818110156106d2578581018301518582016040015282016106b6565b818111156106e4576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561070d5761070d61081f565b500190565b600181815b8085111561074d5781600019048211156107335761073361081f565b8085161561074057918102915b93841c9390800290610717565b509250929050565b600061060560ff84168360008261076e575060016101fc565b8161077b575060006101fc565b8160018114610791576002811461079b576107b7565b60019150506101fc565b60ff8411156107ac576107ac61081f565b50506001821b6101fc565b5060208310610133831016604e8410600b84101617156107da575081810a6101fc565b6107e48383610712565b80600019048211156107f8576107f861081f565b029392505050565b600081600019048311821515161561081a5761081a61081f565b500290565b634e487b7160e01b600052601160045260246000fdfea264697066735822122095f18a8f06fa4ac27ea88baf70b0de233f13909a7f297218daa58ff8392276df64736f6c63430008050033",
  "bytecodeSha1": "469d4e6777c82f09c0ab33db4307bd1da7c46a8c",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.5+commit.a4f2e591"
  },
  "contractName": "VegaToken",
  "coverageMap": {
    "branches": {
      "5": {
        "VegaToken._approve": {
          "23": [
            7192,
            7211,
            true
          ],
          "24": [
            7270,
            7291,
            true
          ]
        },
        "VegaToken._transfer": {
          "25": [
            6031,
            6051,
            true
          ],
          "26": [
            6111,
            6134,
            true
          ],
          "27": [
            6257,
            6280,
            true
          ]
        },
        "VegaToken.transferFrom": {
          "22": [
            5202,
            5228,
            true
          ]
        }
      }
    },
    "statements": {
      "5": {
        "VegaToken._approve": {
          "12": [
            7184,
            7252
          ],
          "13": [
            7262,
            7330
          ],
          "14": [
            7341,
            7377
          ],
          "15": [
            7387,
            7424
          ]
        },
        "VegaToken._transfer": {
          "16": [
            6023,
            6093
          ],
          "17": [
            6103,
            6174
          ],
          "18": [
            6236,
            6344
          ],
          "19": [
            6378,
            6420
          ],
          "20": [
            6440,
            6470
          ],
          "21": [
            6481,
            6521
          ]
        },
        "VegaToken.allowance": {
          "4": [
            4068,
            4102
          ]
        },
        "VegaToken.approve": {
          "5": [
            4382,
            4419
          ],
          "6": [
            4429,
            4440
          ]
        },
        "VegaToken.balanceOf": {
          "2": [
            2775,
            2800
          ]
        },
        "VegaToken.name": {
          "0": [
            2077,
            2089
          ]
        },
        "VegaToken.symbol": {
          "3": [
            2174,
            2188
          ]
        },
        "VegaToken.totalSupply": {
          "1": [
            2375,
            2394
          ]
        },
        "VegaToken.transfer": {
          "11": [
            3790,
            3830
          ]
        },
        "VegaToken.transferFrom": {
          "7": [
            5066,
            5102
          ],
          "8": [
            5181,
            5294
          ],
          "9": [
            5328,
            5383
          ],
          "10": [
            5404,
            5415
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100a95760003560e01c8063313ce56711610071578063313ce5671461014757806332cb6b0c1461014e57806370a082311461015657806395d89b411461017f578063a9059cbb1461019f578063dd62ed3e146101b257600080fd5b806306fdde03146100ae578063095ea7b3146100e557806318160ddd1461010857806323b872dd1461011a5780632e0f26251461012d575b600080fd5b6040805180820190915260098152682b32b3b0aa37b5b2b760b91b60208201525b6040516100dc91906106a5565b60405180910390f35b6100f86100f336600461067b565b6101eb565b60405190151581526020016100dc565b6003545b6040519081526020016100dc565b6100f861012836600461063f565b610202565b610135601281565b60405160ff90911681526020016100dc565b6012610135565b61010c6102b1565b61010c6101643660046105ea565b6001600160a01b031660009081526001602052604090205490565b6040805180820190915260048152635645474160e01b60208201526100cf565b6100f86101ad36600461067b565b6102ce565b61010c6101c036600461060c565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b60006101f83384846102db565b5060015b92915050565b600061020f8484846103ff565b6001600160a01b0384166000908152600260209081526040808320338452909152902054828110156102995760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6102a685338584036102db565b506001949350505050565b6102bd6012600a610755565b6102cb90633b9aca00610800565b81565b60006101f83384846103ff565b6001600160a01b03831661033d5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610290565b6001600160a01b03821661039e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610290565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166104635760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610290565b6001600160a01b0382166104c55760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610290565b6001600160a01b0383166000908152600160205260409020548181101561053d5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610290565b6001600160a01b038085166000908152600160205260408082208585039055918516815290812080548492906105749084906106fa565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516105c091815260200190565b60405180910390a350505050565b80356001600160a01b03811681146105e557600080fd5b919050565b6000602082840312156105fc57600080fd5b610605826105ce565b9392505050565b6000806040838503121561061f57600080fd5b610628836105ce565b9150610636602084016105ce565b90509250929050565b60008060006060848603121561065457600080fd5b61065d846105ce565b925061066b602085016105ce565b9150604084013590509250925092565b6000806040838503121561068e57600080fd5b610697836105ce565b946020939093013593505050565b600060208083528351808285015260005b818110156106d2578581018301518582016040015282016106b6565b818111156106e4576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561070d5761070d61081f565b500190565b600181815b8085111561074d5781600019048211156107335761073361081f565b8085161561074057918102915b93841c9390800290610717565b509250929050565b600061060560ff84168360008261076e575060016101fc565b8161077b575060006101fc565b8160018114610791576002811461079b576107b7565b60019150506101fc565b60ff8411156107ac576107ac61081f565b50506001821b6101fc565b5060208310610133831016604e8410600b84101617156107da575081810a6101fc565b6107e48383610712565b80600019048211156107f8576107f861081f565b029392505050565b600081600019048311821515161561081a5761081a61081f565b500290565b634e487b7160e01b600052601160045260246000fdfea264697066735822122095f18a8f06fa4ac27ea88baf70b0de233f13909a7f297218daa58ff8392276df64736f6c63430008050033",
  "deployedSourceMap": "547:6886:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2007:89;2084:5;;;;;;;;;;;;-1:-1:-1;;;2084:5:5;;;;2007:89;;;;;;;:::i;:::-;;;;;;;;4247:200;;;;;;:::i;:::-;;:::i;:::-;;;1405:14:10;;1398:22;1380:41;;1368:2;1353:18;4247:200:5;1335:92:10;2295:106:5;2382:12;;2295:106;;;4614:25:10;;;4602:2;4587:18;2295:106:5;4569:76:10;4914:508:5;;;;;;:::i;:::-;;:::i;582:35::-;;615:2;582:35;;;;;4822:4:10;4810:17;;;4792:36;;4780:2;4765:18;582:35:5;4747:87:10;2201:88:5;615:2;2201:88;;624:59;;;:::i;2638:169::-;;;;;;:::i;:::-;-1:-1:-1;;;;;2782:18:5;2752:7;2782:18;;;-1:-1:-1;2782:18:5;;;;;;;2638:169;2102:93;2181:7;;;;;;;;;;;;-1:-1:-1;;;2181:7:5;;;;2102:93;;3652:206;;;;;;:::i;:::-;;:::i;3916:193::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4075:18:5;;;4045:7;4075:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3916:193;4247:200;4362:4;4382:37;4391:10;4403:7;4412:6;4382:8;:37::i;:::-;-1:-1:-1;4436:4:5;4247:200;;;;;:::o;4914:508::-;5050:4;5066:36;5076:6;5084:9;5095:6;5066:9;:36::i;:::-;-1:-1:-1;;;;;5140:19:5;;5113:24;5140:19;;;:11;:19;;;;;;;;5160:10;5140:31;;;;;;;;5202:26;;;;5181:113;;;;-1:-1:-1;;;5181:113:5;;3450:2:10;5181:113:5;;;3432:21:10;3489:2;3469:18;;;3462:30;3528:34;3508:18;;;3501:62;-1:-1:-1;;;3579:18:10;;;3572:38;3627:19;;5181:113:5;;;;;;;;;5328:55;5337:6;5345:10;5376:6;5357:16;:25;5328:8;:55::i;:::-;-1:-1:-1;5411:4:5;;4914:508;-1:-1:-1;;;;4914:508:5:o;624:59::-;670:12;615:2;670;:12;:::i;:::-;661:22;;:5;:22;:::i;:::-;624:59;:::o;3652:206::-;3770:4;3790:40;3800:10;3812:9;3823:6;3790:9;:40::i;7061:370::-;-1:-1:-1;;;;;7192:19:5;;7184:68;;;;-1:-1:-1;;;7184:68:5;;4265:2:10;7184:68:5;;;4247:21:10;4304:2;4284:18;;;4277:30;4343:34;4323:18;;;4316:62;-1:-1:-1;;;4394:18:10;;;4387:34;4438:19;;7184:68:5;4237:226:10;7184:68:5;-1:-1:-1;;;;;7270:21:5;;7262:68;;;;-1:-1:-1;;;7262:68:5;;2640:2:10;7262:68:5;;;2622:21:10;2679:2;2659:18;;;2652:30;2718:34;2698:18;;;2691:62;-1:-1:-1;;;2769:18:10;;;2762:32;2811:19;;7262:68:5;2612:224:10;7262:68:5;-1:-1:-1;;;;;7341:18:5;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;7392:32;;4614:25:10;;;7392:32:5;;;;;;;;;;;;7061:370;;;:::o;5896:632::-;-1:-1:-1;;;;;6031:20:5;;6023:70;;;;-1:-1:-1;;;6023:70:5;;3859:2:10;6023:70:5;;;3841:21:10;3898:2;3878:18;;;3871:30;3937:34;3917:18;;;3910:62;-1:-1:-1;;;3988:18:10;;;3981:35;4033:19;;6023:70:5;3831:227:10;6023:70:5;-1:-1:-1;;;;;6111:23:5;;6103:71;;;;-1:-1:-1;;;6103:71:5;;2236:2:10;6103:71:5;;;2218:21:10;2275:2;2255:18;;;2248:30;2314:34;2294:18;;;2287:62;-1:-1:-1;;;2365:18:10;;;2358:33;2408:19;;6103:71:5;2208:225:10;6103:71:5;-1:-1:-1;;;;;6209:17:5;;6185:21;6209:17;;;-1:-1:-1;6209:17:5;;;;;;6257:23;;;;6236:108;;;;-1:-1:-1;;;6236:108:5;;3043:2:10;6236:108:5;;;3025:21:10;3082:2;3062:18;;;3055:30;3121:34;3101:18;;;3094:62;-1:-1:-1;;;3172:18:10;;;3165:36;3218:19;;6236:108:5;3015:228:10;6236:108:5;-1:-1:-1;;;;;6378:17:5;;;;;;;-1:-1:-1;6378:17:5;;;;;;6398:22;;;6378:42;;6440:20;;;;;;;;:30;;6398:22;;6378:17;6440:30;;6398:22;;6440:30;:::i;:::-;;;;-1:-1:-1;;6486:35:5;;4614:25:10;;;-1:-1:-1;;;;;6486:35:5;;;;;;;;;;4602:2:10;4587:18;6486:35:5;;;;;;;6013:515;5896:632;;;:::o;14:173:10:-;82:20;;-1:-1:-1;;;;;131:31:10;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;320:1;317;310:12;272:2;343:29;362:9;343:29;:::i;:::-;333:39;262:116;-1:-1:-1;;;262:116:10:o;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:2;;;528:1;525;518:12;480:2;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;470:173;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:2;;;810:1;807;800:12;762:2;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;752:224;;;;;:::o;981:254::-;1049:6;1057;1110:2;1098:9;1089:7;1085:23;1081:32;1078:2;;;1126:1;1123;1116:12;1078:2;1149:29;1168:9;1149:29;:::i;:::-;1139:39;1225:2;1210:18;;;;1197:32;;-1:-1:-1;;;1068:167:10:o;1432:597::-;1544:4;1573:2;1602;1591:9;1584:21;1634:6;1628:13;1677:6;1672:2;1661:9;1657:18;1650:34;1702:1;1712:140;1726:6;1723:1;1720:13;1712:140;;;1821:14;;;1817:23;;1811:30;1787:17;;;1806:2;1783:26;1776:66;1741:10;;1712:140;;;1870:6;1867:1;1864:13;1861:2;;;1940:1;1935:2;1926:6;1915:9;1911:22;1907:31;1900:42;1861:2;-1:-1:-1;2013:2:10;1992:15;-1:-1:-1;;1988:29:10;1973:45;;;;2020:2;1969:54;;1553:476;-1:-1:-1;;;1553:476:10:o;4839:128::-;4879:3;4910:1;4906:6;4903:1;4900:13;4897:2;;;4916:18;;:::i;:::-;-1:-1:-1;4952:9:10;;4887:80::o;4972:422::-;5061:1;5104:5;5061:1;5118:270;5139:7;5129:8;5126:21;5118:270;;;5198:4;5194:1;5190:6;5186:17;5180:4;5177:27;5174:2;;;5207:18;;:::i;:::-;5257:7;5247:8;5243:22;5240:2;;;5277:16;;;;5240:2;5356:22;;;;5316:15;;;;5118:270;;;5122:3;5036:358;;;;;:::o;5399:140::-;5457:5;5486:47;5527:4;5517:8;5513:19;5507:4;5593:5;5623:8;5613:2;;-1:-1:-1;5664:1:10;5678:5;;5613:2;5712:4;5702:2;;-1:-1:-1;5749:1:10;5763:5;;5702:2;5794:4;5812:1;5807:59;;;;5880:1;5875:130;;;;5787:218;;5807:59;5837:1;5828:10;;5851:5;;;5875:130;5912:3;5902:8;5899:17;5896:2;;;5919:18;;:::i;:::-;-1:-1:-1;;5975:1:10;5961:16;;5990:5;;5787:218;;6089:2;6079:8;6076:16;6070:3;6064:4;6061:13;6057:36;6051:2;6041:8;6038:16;6033:2;6027:4;6024:12;6020:35;6017:77;6014:2;;;-1:-1:-1;6126:19:10;;;6158:5;;6014:2;6205:34;6230:8;6224:4;6205:34;:::i;:::-;6275:6;6271:1;6267:6;6263:19;6254:7;6251:32;6248:2;;;6286:18;;:::i;:::-;6324:20;;5603:747;-1:-1:-1;;;5603:747:10:o;6355:168::-;6395:7;6461:1;6457;6453:6;6449:14;6446:1;6443:21;6438:1;6431:9;6424:17;6420:45;6417:2;;;6468:18;;:::i;:::-;-1:-1:-1;6508:9:10;;6407:116::o;6528:127::-;6589:10;6584:3;6580:20;6577:1;6570:31;6620:4;6617:1;6610:15;6644:4;6641:1;6634:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "constructor": {
        "notice": "construct token and genesis mint"
      },
      "transfer(address,uint256)": {
        "notice": "Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "offset": [
    547,
    7433
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xE5 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x2E0F2625 EQ PUSH2 0x12D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH9 0x2B32B3B0AA37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDC SWAP2 SWAP1 PUSH2 0x6A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF8 PUSH2 0xF3 CALLDATASIZE PUSH1 0x4 PUSH2 0x67B JUMP JUMPDEST PUSH2 0x1EB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDC JUMP JUMPDEST PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDC JUMP JUMPDEST PUSH2 0xF8 PUSH2 0x128 CALLDATASIZE PUSH1 0x4 PUSH2 0x63F JUMP JUMPDEST PUSH2 0x202 JUMP JUMPDEST PUSH2 0x135 PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDC JUMP JUMPDEST PUSH1 0x12 PUSH2 0x135 JUMP JUMPDEST PUSH2 0x10C PUSH2 0x2B1 JUMP JUMPDEST PUSH2 0x10C PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH4 0x56454741 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xCF JUMP JUMPDEST PUSH2 0xF8 PUSH2 0x1AD CALLDATASIZE PUSH1 0x4 PUSH2 0x67B JUMP JUMPDEST PUSH2 0x2CE JUMP JUMPDEST PUSH2 0x10C PUSH2 0x1C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x60C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F8 CALLER DUP5 DUP5 PUSH2 0x2DB JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20F DUP5 DUP5 DUP5 PUSH2 0x3FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x299 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A6 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x2DB JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2BD PUSH1 0x12 PUSH1 0xA PUSH2 0x755 JUMP JUMPDEST PUSH2 0x2CB SWAP1 PUSH4 0x3B9ACA00 PUSH2 0x800 JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F8 CALLER DUP5 DUP5 PUSH2 0x3FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x33D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x290 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x39E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x290 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x463 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x290 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x290 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x53D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x290 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x574 SWAP1 DUP5 SWAP1 PUSH2 0x6FA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x5C0 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x605 DUP3 PUSH2 0x5CE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x61F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x628 DUP4 PUSH2 0x5CE JUMP JUMPDEST SWAP2 POP PUSH2 0x636 PUSH1 0x20 DUP5 ADD PUSH2 0x5CE JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x654 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x65D DUP5 PUSH2 0x5CE JUMP JUMPDEST SWAP3 POP PUSH2 0x66B PUSH1 0x20 DUP6 ADD PUSH2 0x5CE JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x68E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x697 DUP4 PUSH2 0x5CE JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6D2 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6B6 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x6E4 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x70D JUMPI PUSH2 0x70D PUSH2 0x81F JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x74D JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x733 JUMPI PUSH2 0x733 PUSH2 0x81F JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x740 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x717 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x605 PUSH1 0xFF DUP5 AND DUP4 PUSH1 0x0 DUP3 PUSH2 0x76E JUMPI POP PUSH1 0x1 PUSH2 0x1FC JUMP JUMPDEST DUP2 PUSH2 0x77B JUMPI POP PUSH1 0x0 PUSH2 0x1FC JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x791 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x79B JUMPI PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1FC JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x7AC JUMPI PUSH2 0x7AC PUSH2 0x81F JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x1FC JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x7DA JUMPI POP DUP2 DUP2 EXP PUSH2 0x1FC JUMP JUMPDEST PUSH2 0x7E4 DUP4 DUP4 PUSH2 0x712 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x7F8 JUMPI PUSH2 0x7F8 PUSH2 0x81F JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x81A JUMPI PUSH2 0x81A PUSH2 0x81F JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 CALL DUP11 DUP16 MOD STATICCALL 0x4A 0xC2 PUSH31 0xA88BAF70B0DE233F13909A7F297218DAA58FF8392276DF64736F6C63430008 SDIV STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        547,
        7433
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "6": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "8": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "REVERT",
      "path": "5"
    },
    "16": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "17": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "POP",
      "path": "5"
    },
    "18": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "21": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "LT",
      "path": "5"
    },
    "22": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA9"
    },
    "25": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "26": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "29": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "SHR",
      "path": "5"
    },
    "32": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "DUP1",
      "path": "5"
    },
    "33": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x313CE567"
    },
    "38": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "GT",
      "path": "5"
    },
    "39": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "43": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "DUP1",
      "path": "5"
    },
    "44": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x313CE567"
    },
    "49": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "EQ",
      "path": "5"
    },
    "50": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x147"
    },
    "53": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "54": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "DUP1",
      "path": "5"
    },
    "55": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x32CB6B0C"
    },
    "60": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "EQ",
      "path": "5"
    },
    "61": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14E"
    },
    "64": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "65": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "DUP1",
      "path": "5"
    },
    "66": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x70A08231"
    },
    "71": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "EQ",
      "path": "5"
    },
    "72": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x156"
    },
    "75": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "76": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "DUP1",
      "path": "5"
    },
    "77": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x95D89B41"
    },
    "82": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "EQ",
      "path": "5"
    },
    "83": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x17F"
    },
    "86": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "87": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "DUP1",
      "path": "5"
    },
    "88": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xA9059CBB"
    },
    "93": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "EQ",
      "path": "5"
    },
    "94": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x19F"
    },
    "97": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "98": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "DUP1",
      "path": "5"
    },
    "99": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xDD62ED3E"
    },
    "104": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "EQ",
      "path": "5"
    },
    "105": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B2"
    },
    "108": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "109": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "DUP1",
      "path": "5"
    },
    "112": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "REVERT",
      "path": "5"
    },
    "113": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "114": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "DUP1",
      "path": "5"
    },
    "115": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x6FDDE03"
    },
    "120": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "EQ",
      "path": "5"
    },
    "121": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAE"
    },
    "124": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "125": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "DUP1",
      "path": "5"
    },
    "126": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x95EA7B3"
    },
    "131": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "EQ",
      "path": "5"
    },
    "132": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE5"
    },
    "135": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "136": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "DUP1",
      "path": "5"
    },
    "137": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x18160DDD"
    },
    "142": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "EQ",
      "path": "5"
    },
    "143": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x108"
    },
    "146": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "147": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "DUP1",
      "path": "5"
    },
    "148": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x23B872DD"
    },
    "153": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "EQ",
      "path": "5"
    },
    "154": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11A"
    },
    "157": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "158": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "DUP1",
      "path": "5"
    },
    "159": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x2E0F2625"
    },
    "164": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "EQ",
      "path": "5"
    },
    "165": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12D"
    },
    "168": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "169": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "170": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "172": {
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "DUP1",
      "path": "5"
    },
    "173": {
      "first_revert": true,
      "fn": null,
      "offset": [
        547,
        7433
      ],
      "op": "REVERT",
      "path": "5"
    },
    "174": {
      "fn": "VegaToken.name",
      "offset": [
        2007,
        2096
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "175": {
      "fn": "VegaToken.name",
      "offset": [
        2084,
        2089
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 0,
      "value": "0x40"
    },
    "177": {
      "fn": "VegaToken.name",
      "offset": [
        2084,
        2089
      ],
      "op": "DUP1",
      "path": "5"
    },
    "178": {
      "fn": "VegaToken.name",
      "offset": [
        2084,
        2089
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "179": {
      "fn": "VegaToken.name",
      "offset": [
        2084,
        2089
      ],
      "op": "DUP1",
      "path": "5"
    },
    "180": {
      "fn": "VegaToken.name",
      "offset": [
        2084,
        2089
      ],
      "op": "DUP3",
      "path": "5"
    },
    "181": {
      "fn": "VegaToken.name",
      "offset": [
        2084,
        2089
      ],
      "op": "ADD",
      "path": "5"
    },
    "182": {
      "fn": "VegaToken.name",
      "offset": [
        2084,
        2089
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "183": {
      "fn": "VegaToken.name",
      "offset": [
        2084,
        2089
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "184": {
      "fn": "VegaToken.name",
      "offset": [
        2084,
        2089
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "185": {
      "fn": "VegaToken.name",
      "offset": [
        2084,
        2089
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x9"
    },
    "187": {
      "fn": "VegaToken.name",
      "offset": [
        2084,
        2089
      ],
      "op": "DUP2",
      "path": "5"
    },
    "188": {
      "fn": "VegaToken.name",
      "offset": [
        2084,
        2089
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "189": {
      "op": "PUSH9",
      "value": "0x2B32B3B0AA37B5B2B7"
    },
    "199": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "201": {
      "op": "SHL"
    },
    "202": {
      "fn": "VegaToken.name",
      "offset": [
        2084,
        2089
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "204": {
      "fn": "VegaToken.name",
      "offset": [
        2084,
        2089
      ],
      "op": "DUP3",
      "path": "5"
    },
    "205": {
      "fn": "VegaToken.name",
      "offset": [
        2084,
        2089
      ],
      "op": "ADD",
      "path": "5"
    },
    "206": {
      "fn": "VegaToken.name",
      "offset": [
        2084,
        2089
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "207": {
      "fn": "VegaToken.name",
      "offset": [
        2007,
        2096
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "208": {
      "fn": "VegaToken.name",
      "offset": [
        2007,
        2096
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "210": {
      "fn": "VegaToken.name",
      "offset": [
        2007,
        2096
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "211": {
      "fn": "VegaToken.name",
      "offset": [
        2007,
        2096
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDC"
    },
    "214": {
      "fn": "VegaToken.name",
      "offset": [
        2007,
        2096
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "215": {
      "fn": "VegaToken.name",
      "offset": [
        2007,
        2096
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "216": {
      "fn": "VegaToken.name",
      "offset": [
        2007,
        2096
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6A5"
    },
    "219": {
      "fn": "VegaToken.name",
      "jump": "i",
      "offset": [
        2007,
        2096
      ],
      "op": "JUMP",
      "path": "5"
    },
    "220": {
      "fn": "VegaToken.name",
      "offset": [
        2007,
        2096
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "221": {
      "fn": "VegaToken.name",
      "offset": [
        2007,
        2096
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "223": {
      "fn": "VegaToken.name",
      "offset": [
        2007,
        2096
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "224": {
      "fn": "VegaToken.name",
      "offset": [
        2007,
        2096
      ],
      "op": "DUP1",
      "path": "5"
    },
    "225": {
      "fn": "VegaToken.name",
      "offset": [
        2007,
        2096
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "226": {
      "fn": "VegaToken.name",
      "offset": [
        2007,
        2096
      ],
      "op": "SUB",
      "path": "5"
    },
    "227": {
      "fn": "VegaToken.name",
      "offset": [
        2007,
        2096
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "228": {
      "fn": "VegaToken.name",
      "offset": [
        2007,
        2096
      ],
      "op": "RETURN",
      "path": "5"
    },
    "229": {
      "fn": "VegaToken.approve",
      "offset": [
        4247,
        4447
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "230": {
      "fn": "VegaToken.approve",
      "offset": [
        4247,
        4447
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF8"
    },
    "233": {
      "fn": "VegaToken.approve",
      "offset": [
        4247,
        4447
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF3"
    },
    "236": {
      "fn": "VegaToken.approve",
      "offset": [
        4247,
        4447
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "237": {
      "fn": "VegaToken.approve",
      "offset": [
        4247,
        4447
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "239": {
      "fn": "VegaToken.approve",
      "offset": [
        4247,
        4447
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x67B"
    },
    "242": {
      "fn": "VegaToken.approve",
      "jump": "i",
      "offset": [
        4247,
        4447
      ],
      "op": "JUMP",
      "path": "5"
    },
    "243": {
      "fn": "VegaToken.approve",
      "offset": [
        4247,
        4447
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "244": {
      "fn": "VegaToken.approve",
      "offset": [
        4247,
        4447
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1EB"
    },
    "247": {
      "fn": "VegaToken.approve",
      "jump": "i",
      "offset": [
        4247,
        4447
      ],
      "op": "JUMP",
      "path": "5"
    },
    "248": {
      "fn": "VegaToken.approve",
      "offset": [
        4247,
        4447
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "249": {
      "fn": "VegaToken.approve",
      "offset": [
        4247,
        4447
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "251": {
      "fn": "VegaToken.approve",
      "offset": [
        4247,
        4447
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "252": {
      "op": "SWAP1"
    },
    "253": {
      "op": "ISZERO"
    },
    "254": {
      "op": "ISZERO"
    },
    "255": {
      "op": "DUP2"
    },
    "256": {
      "op": "MSTORE"
    },
    "257": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "259": {
      "op": "ADD"
    },
    "260": {
      "fn": "VegaToken.approve",
      "offset": [
        4247,
        4447
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDC"
    },
    "263": {
      "op": "JUMP"
    },
    "264": {
      "fn": "VegaToken.totalSupply",
      "offset": [
        2295,
        2401
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "265": {
      "fn": "VegaToken.totalSupply",
      "offset": [
        2382,
        2394
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 1,
      "value": "0x3"
    },
    "267": {
      "fn": "VegaToken.totalSupply",
      "offset": [
        2382,
        2394
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "268": {
      "fn": "VegaToken.totalSupply",
      "offset": [
        2295,
        2401
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "269": {
      "fn": "VegaToken.totalSupply",
      "offset": [
        2295,
        2401
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "271": {
      "fn": "VegaToken.totalSupply",
      "offset": [
        2295,
        2401
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "272": {
      "op": "SWAP1"
    },
    "273": {
      "op": "DUP2"
    },
    "274": {
      "op": "MSTORE"
    },
    "275": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "277": {
      "op": "ADD"
    },
    "278": {
      "fn": "VegaToken.totalSupply",
      "offset": [
        2295,
        2401
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDC"
    },
    "281": {
      "op": "JUMP"
    },
    "282": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        4914,
        5422
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "283": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        4914,
        5422
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF8"
    },
    "286": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        4914,
        5422
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x128"
    },
    "289": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        4914,
        5422
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "290": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        4914,
        5422
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "292": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        4914,
        5422
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x63F"
    },
    "295": {
      "fn": "VegaToken.transferFrom",
      "jump": "i",
      "offset": [
        4914,
        5422
      ],
      "op": "JUMP",
      "path": "5"
    },
    "296": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        4914,
        5422
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "297": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        4914,
        5422
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x202"
    },
    "300": {
      "fn": "VegaToken.transferFrom",
      "jump": "i",
      "offset": [
        4914,
        5422
      ],
      "op": "JUMP",
      "path": "5"
    },
    "301": {
      "offset": [
        582,
        617
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "302": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        582,
        617
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x135"
    },
    "305": {
      "offset": [
        615,
        617
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x12"
    },
    "307": {
      "offset": [
        582,
        617
      ],
      "op": "DUP2",
      "path": "5"
    },
    "308": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        582,
        617
      ],
      "op": "JUMP",
      "path": "5"
    },
    "309": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        582,
        617
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "310": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        582,
        617
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "312": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        582,
        617
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "313": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "315": {
      "op": "SWAP1"
    },
    "316": {
      "op": "SWAP2"
    },
    "317": {
      "op": "AND"
    },
    "318": {
      "op": "DUP2"
    },
    "319": {
      "op": "MSTORE"
    },
    "320": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "322": {
      "op": "ADD"
    },
    "323": {
      "offset": [
        582,
        617
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDC"
    },
    "326": {
      "op": "JUMP"
    },
    "327": {
      "fn": "VegaToken.decimals",
      "offset": [
        2201,
        2289
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "328": {
      "offset": [
        615,
        617
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x12"
    },
    "330": {
      "fn": "VegaToken.decimals",
      "offset": [
        2201,
        2289
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x135"
    },
    "333": {
      "fn": "VegaToken.decimals",
      "offset": [
        2201,
        2289
      ],
      "op": "JUMP",
      "path": "5"
    },
    "334": {
      "offset": [
        624,
        683
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "335": {
      "fn": "VegaToken.decimals",
      "offset": [
        624,
        683
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10C"
    },
    "338": {
      "fn": "VegaToken.decimals",
      "offset": [
        624,
        683
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B1"
    },
    "341": {
      "fn": "VegaToken.decimals",
      "jump": "i",
      "offset": [
        624,
        683
      ],
      "op": "JUMP",
      "path": "5"
    },
    "342": {
      "fn": "VegaToken.balanceOf",
      "offset": [
        2638,
        2807
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "343": {
      "fn": "VegaToken.balanceOf",
      "offset": [
        2638,
        2807
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10C"
    },
    "346": {
      "fn": "VegaToken.balanceOf",
      "offset": [
        2638,
        2807
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x164"
    },
    "349": {
      "fn": "VegaToken.balanceOf",
      "offset": [
        2638,
        2807
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "350": {
      "fn": "VegaToken.balanceOf",
      "offset": [
        2638,
        2807
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "352": {
      "fn": "VegaToken.balanceOf",
      "offset": [
        2638,
        2807
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5EA"
    },
    "355": {
      "fn": "VegaToken.balanceOf",
      "jump": "i",
      "offset": [
        2638,
        2807
      ],
      "op": "JUMP",
      "path": "5"
    },
    "356": {
      "fn": "VegaToken.balanceOf",
      "offset": [
        2638,
        2807
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "361": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "363": {
      "op": "SHL"
    },
    "364": {
      "op": "SUB"
    },
    "365": {
      "fn": "VegaToken.balanceOf",
      "offset": [
        2782,
        2800
      ],
      "op": "AND",
      "path": "5",
      "statement": 2
    },
    "366": {
      "fn": "VegaToken.balanceOf",
      "offset": [
        2752,
        2759
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "368": {
      "fn": "VegaToken.balanceOf",
      "offset": [
        2782,
        2800
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "369": {
      "fn": "VegaToken.balanceOf",
      "offset": [
        2782,
        2800
      ],
      "op": "DUP2",
      "path": "5"
    },
    "370": {
      "fn": "VegaToken.balanceOf",
      "offset": [
        2782,
        2800
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "373": {
      "fn": "VegaToken.balanceOf",
      "offset": [
        2782,
        2800
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "375": {
      "fn": "VegaToken.balanceOf",
      "offset": [
        2782,
        2800
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "376": {
      "fn": "VegaToken.balanceOf",
      "offset": [
        2782,
        2800
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "378": {
      "fn": "VegaToken.balanceOf",
      "offset": [
        2782,
        2800
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "379": {
      "fn": "VegaToken.balanceOf",
      "offset": [
        2782,
        2800
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "380": {
      "fn": "VegaToken.balanceOf",
      "offset": [
        2782,
        2800
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "381": {
      "fn": "VegaToken.balanceOf",
      "offset": [
        2782,
        2800
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "382": {
      "fn": "VegaToken.balanceOf",
      "offset": [
        2638,
        2807
      ],
      "op": "JUMP",
      "path": "5"
    },
    "383": {
      "fn": "VegaToken.symbol",
      "offset": [
        2102,
        2195
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "384": {
      "fn": "VegaToken.symbol",
      "offset": [
        2181,
        2188
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 3,
      "value": "0x40"
    },
    "386": {
      "fn": "VegaToken.symbol",
      "offset": [
        2181,
        2188
      ],
      "op": "DUP1",
      "path": "5"
    },
    "387": {
      "fn": "VegaToken.symbol",
      "offset": [
        2181,
        2188
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "388": {
      "fn": "VegaToken.symbol",
      "offset": [
        2181,
        2188
      ],
      "op": "DUP1",
      "path": "5"
    },
    "389": {
      "fn": "VegaToken.symbol",
      "offset": [
        2181,
        2188
      ],
      "op": "DUP3",
      "path": "5"
    },
    "390": {
      "fn": "VegaToken.symbol",
      "offset": [
        2181,
        2188
      ],
      "op": "ADD",
      "path": "5"
    },
    "391": {
      "fn": "VegaToken.symbol",
      "offset": [
        2181,
        2188
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "392": {
      "fn": "VegaToken.symbol",
      "offset": [
        2181,
        2188
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "393": {
      "fn": "VegaToken.symbol",
      "offset": [
        2181,
        2188
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "394": {
      "fn": "VegaToken.symbol",
      "offset": [
        2181,
        2188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "396": {
      "fn": "VegaToken.symbol",
      "offset": [
        2181,
        2188
      ],
      "op": "DUP2",
      "path": "5"
    },
    "397": {
      "fn": "VegaToken.symbol",
      "offset": [
        2181,
        2188
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "398": {
      "op": "PUSH4",
      "value": "0x56454741"
    },
    "403": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "405": {
      "op": "SHL"
    },
    "406": {
      "fn": "VegaToken.symbol",
      "offset": [
        2181,
        2188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "408": {
      "fn": "VegaToken.symbol",
      "offset": [
        2181,
        2188
      ],
      "op": "DUP3",
      "path": "5"
    },
    "409": {
      "fn": "VegaToken.symbol",
      "offset": [
        2181,
        2188
      ],
      "op": "ADD",
      "path": "5"
    },
    "410": {
      "fn": "VegaToken.symbol",
      "offset": [
        2181,
        2188
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "411": {
      "fn": "VegaToken.symbol",
      "offset": [
        2102,
        2195
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCF"
    },
    "414": {
      "fn": "VegaToken.symbol",
      "offset": [
        2102,
        2195
      ],
      "op": "JUMP",
      "path": "5"
    },
    "415": {
      "fn": "VegaToken.transfer",
      "offset": [
        3652,
        3858
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "416": {
      "fn": "VegaToken.transfer",
      "offset": [
        3652,
        3858
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF8"
    },
    "419": {
      "fn": "VegaToken.transfer",
      "offset": [
        3652,
        3858
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1AD"
    },
    "422": {
      "fn": "VegaToken.transfer",
      "offset": [
        3652,
        3858
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "423": {
      "fn": "VegaToken.transfer",
      "offset": [
        3652,
        3858
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "425": {
      "fn": "VegaToken.transfer",
      "offset": [
        3652,
        3858
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x67B"
    },
    "428": {
      "fn": "VegaToken.transfer",
      "jump": "i",
      "offset": [
        3652,
        3858
      ],
      "op": "JUMP",
      "path": "5"
    },
    "429": {
      "fn": "VegaToken.transfer",
      "offset": [
        3652,
        3858
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "430": {
      "fn": "VegaToken.transfer",
      "offset": [
        3652,
        3858
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2CE"
    },
    "433": {
      "fn": "VegaToken.transfer",
      "jump": "i",
      "offset": [
        3652,
        3858
      ],
      "op": "JUMP",
      "path": "5"
    },
    "434": {
      "fn": "VegaToken.allowance",
      "offset": [
        3916,
        4109
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "435": {
      "fn": "VegaToken.allowance",
      "offset": [
        3916,
        4109
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10C"
    },
    "438": {
      "fn": "VegaToken.allowance",
      "offset": [
        3916,
        4109
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C0"
    },
    "441": {
      "fn": "VegaToken.allowance",
      "offset": [
        3916,
        4109
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "442": {
      "fn": "VegaToken.allowance",
      "offset": [
        3916,
        4109
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "444": {
      "fn": "VegaToken.allowance",
      "offset": [
        3916,
        4109
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x60C"
    },
    "447": {
      "fn": "VegaToken.allowance",
      "jump": "i",
      "offset": [
        3916,
        4109
      ],
      "op": "JUMP",
      "path": "5"
    },
    "448": {
      "fn": "VegaToken.allowance",
      "offset": [
        3916,
        4109
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "453": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "455": {
      "op": "SHL"
    },
    "456": {
      "op": "SUB"
    },
    "457": {
      "fn": "VegaToken.allowance",
      "offset": [
        4075,
        4093
      ],
      "op": "SWAP2",
      "path": "5",
      "statement": 4
    },
    "458": {
      "fn": "VegaToken.allowance",
      "offset": [
        4075,
        4093
      ],
      "op": "DUP3",
      "path": "5"
    },
    "459": {
      "fn": "VegaToken.allowance",
      "offset": [
        4075,
        4093
      ],
      "op": "AND",
      "path": "5"
    },
    "460": {
      "fn": "VegaToken.allowance",
      "offset": [
        4045,
        4052
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "462": {
      "fn": "VegaToken.allowance",
      "offset": [
        4075,
        4093
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "463": {
      "fn": "VegaToken.allowance",
      "offset": [
        4075,
        4093
      ],
      "op": "DUP2",
      "path": "5"
    },
    "464": {
      "fn": "VegaToken.allowance",
      "offset": [
        4075,
        4093
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "465": {
      "fn": "VegaToken.allowance",
      "offset": [
        4075,
        4086
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "467": {
      "fn": "VegaToken.allowance",
      "offset": [
        4075,
        4093
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "469": {
      "fn": "VegaToken.allowance",
      "offset": [
        4075,
        4093
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "470": {
      "fn": "VegaToken.allowance",
      "offset": [
        4075,
        4093
      ],
      "op": "DUP2",
      "path": "5"
    },
    "471": {
      "fn": "VegaToken.allowance",
      "offset": [
        4075,
        4093
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "472": {
      "fn": "VegaToken.allowance",
      "offset": [
        4075,
        4093
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "474": {
      "fn": "VegaToken.allowance",
      "offset": [
        4075,
        4093
      ],
      "op": "DUP1",
      "path": "5"
    },
    "475": {
      "fn": "VegaToken.allowance",
      "offset": [
        4075,
        4093
      ],
      "op": "DUP4",
      "path": "5"
    },
    "476": {
      "fn": "VegaToken.allowance",
      "offset": [
        4075,
        4093
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "477": {
      "fn": "VegaToken.allowance",
      "offset": [
        4075,
        4102
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "478": {
      "fn": "VegaToken.allowance",
      "offset": [
        4075,
        4102
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "479": {
      "fn": "VegaToken.allowance",
      "offset": [
        4075,
        4102
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "480": {
      "fn": "VegaToken.allowance",
      "offset": [
        4075,
        4102
      ],
      "op": "AND",
      "path": "5"
    },
    "481": {
      "fn": "VegaToken.allowance",
      "offset": [
        4075,
        4102
      ],
      "op": "DUP3",
      "path": "5"
    },
    "482": {
      "fn": "VegaToken.allowance",
      "offset": [
        4075,
        4102
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "483": {
      "fn": "VegaToken.allowance",
      "offset": [
        4075,
        4102
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "484": {
      "fn": "VegaToken.allowance",
      "offset": [
        4075,
        4102
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "485": {
      "fn": "VegaToken.allowance",
      "offset": [
        4075,
        4102
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "486": {
      "fn": "VegaToken.allowance",
      "offset": [
        4075,
        4102
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "487": {
      "fn": "VegaToken.allowance",
      "offset": [
        4075,
        4102
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "488": {
      "fn": "VegaToken.allowance",
      "offset": [
        4075,
        4102
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "489": {
      "fn": "VegaToken.allowance",
      "offset": [
        4075,
        4102
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "490": {
      "fn": "VegaToken.allowance",
      "offset": [
        3916,
        4109
      ],
      "op": "JUMP",
      "path": "5"
    },
    "491": {
      "fn": "VegaToken.approve",
      "offset": [
        4247,
        4447
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "492": {
      "fn": "VegaToken.approve",
      "offset": [
        4362,
        4366
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "494": {
      "fn": "VegaToken.approve",
      "offset": [
        4382,
        4419
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 5,
      "value": "0x1F8"
    },
    "497": {
      "fn": "VegaToken.approve",
      "offset": [
        4391,
        4401
      ],
      "op": "CALLER",
      "path": "5"
    },
    "498": {
      "fn": "VegaToken.approve",
      "offset": [
        4403,
        4410
      ],
      "op": "DUP5",
      "path": "5"
    },
    "499": {
      "fn": "VegaToken.approve",
      "offset": [
        4412,
        4418
      ],
      "op": "DUP5",
      "path": "5"
    },
    "500": {
      "fn": "VegaToken.approve",
      "offset": [
        4382,
        4390
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2DB"
    },
    "503": {
      "fn": "VegaToken.approve",
      "jump": "i",
      "offset": [
        4382,
        4419
      ],
      "op": "JUMP",
      "path": "5"
    },
    "504": {
      "fn": "VegaToken.approve",
      "offset": [
        4382,
        4419
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "505": {
      "op": "POP"
    },
    "506": {
      "fn": "VegaToken.approve",
      "offset": [
        4436,
        4440
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 6,
      "value": "0x1"
    },
    "508": {
      "fn": "VegaToken.approve",
      "offset": [
        4247,
        4447
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "509": {
      "fn": "VegaToken.approve",
      "offset": [
        4247,
        4447
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "510": {
      "fn": "VegaToken.approve",
      "offset": [
        4247,
        4447
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "511": {
      "fn": "VegaToken.approve",
      "offset": [
        4247,
        4447
      ],
      "op": "POP",
      "path": "5"
    },
    "512": {
      "fn": "VegaToken.approve",
      "offset": [
        4247,
        4447
      ],
      "op": "POP",
      "path": "5"
    },
    "513": {
      "fn": "VegaToken.approve",
      "jump": "o",
      "offset": [
        4247,
        4447
      ],
      "op": "JUMP",
      "path": "5"
    },
    "514": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        4914,
        5422
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "515": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5050,
        5054
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "517": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5066,
        5102
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 7,
      "value": "0x20F"
    },
    "520": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5076,
        5082
      ],
      "op": "DUP5",
      "path": "5"
    },
    "521": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5084,
        5093
      ],
      "op": "DUP5",
      "path": "5"
    },
    "522": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5095,
        5101
      ],
      "op": "DUP5",
      "path": "5"
    },
    "523": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5066,
        5075
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3FF"
    },
    "526": {
      "fn": "VegaToken.transferFrom",
      "jump": "i",
      "offset": [
        5066,
        5102
      ],
      "op": "JUMP",
      "path": "5"
    },
    "527": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5066,
        5102
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "532": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "534": {
      "op": "SHL"
    },
    "535": {
      "op": "SUB"
    },
    "536": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5140,
        5159
      ],
      "op": "DUP5",
      "path": "5"
    },
    "537": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5140,
        5159
      ],
      "op": "AND",
      "path": "5"
    },
    "538": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5113,
        5137
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "540": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5140,
        5159
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "541": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5140,
        5159
      ],
      "op": "DUP2",
      "path": "5"
    },
    "542": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5140,
        5159
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "543": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5140,
        5151
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "545": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5140,
        5159
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "547": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5140,
        5159
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "548": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5140,
        5159
      ],
      "op": "DUP2",
      "path": "5"
    },
    "549": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5140,
        5159
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "550": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5140,
        5159
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "552": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5140,
        5159
      ],
      "op": "DUP1",
      "path": "5"
    },
    "553": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5140,
        5159
      ],
      "op": "DUP4",
      "path": "5"
    },
    "554": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5140,
        5159
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "555": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5160,
        5170
      ],
      "op": "CALLER",
      "path": "5"
    },
    "556": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5140,
        5171
      ],
      "op": "DUP5",
      "path": "5"
    },
    "557": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5140,
        5171
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "558": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5140,
        5171
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "559": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5140,
        5171
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "560": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5140,
        5171
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "561": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5140,
        5171
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "562": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5140,
        5171
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "563": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5140,
        5171
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "564": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5202,
        5228
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 8
    },
    "565": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5202,
        5228
      ],
      "op": "DUP2",
      "path": "5"
    },
    "566": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5202,
        5228
      ],
      "op": "LT",
      "path": "5"
    },
    "567": {
      "branch": 22,
      "fn": "VegaToken.transferFrom",
      "offset": [
        5202,
        5228
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "568": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5181,
        5294
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x299"
    },
    "571": {
      "branch": 22,
      "fn": "VegaToken.transferFrom",
      "offset": [
        5181,
        5294
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "572": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5181,
        5294
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "574": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5181,
        5294
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "575": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "579": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "581": {
      "op": "SHL"
    },
    "582": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5181,
        5294
      ],
      "op": "DUP2",
      "path": "5"
    },
    "583": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5181,
        5294
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "584": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "586": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5181,
        5294
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "588": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5181,
        5294
      ],
      "op": "DUP3",
      "path": "5"
    },
    "589": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5181,
        5294
      ],
      "op": "ADD",
      "path": "5"
    },
    "590": {
      "op": "MSTORE"
    },
    "591": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "593": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "595": {
      "op": "DUP3"
    },
    "596": {
      "op": "ADD"
    },
    "597": {
      "op": "MSTORE"
    },
    "598": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732061"
    },
    "631": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "633": {
      "op": "DUP3"
    },
    "634": {
      "op": "ADD"
    },
    "635": {
      "op": "MSTORE"
    },
    "636": {
      "op": "PUSH8",
      "value": "0x6C6C6F77616E6365"
    },
    "645": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "647": {
      "op": "SHL"
    },
    "648": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "650": {
      "op": "DUP3"
    },
    "651": {
      "op": "ADD"
    },
    "652": {
      "op": "MSTORE"
    },
    "653": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "655": {
      "op": "ADD"
    },
    "656": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5181,
        5294
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "657": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5181,
        5294
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "659": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5181,
        5294
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "660": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5181,
        5294
      ],
      "op": "DUP1",
      "path": "5"
    },
    "661": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5181,
        5294
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "662": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5181,
        5294
      ],
      "op": "SUB",
      "path": "5"
    },
    "663": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5181,
        5294
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "664": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5181,
        5294
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "5"
    },
    "665": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5181,
        5294
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "666": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5328,
        5383
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 9,
      "value": "0x2A6"
    },
    "669": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5337,
        5343
      ],
      "op": "DUP6",
      "path": "5"
    },
    "670": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5345,
        5355
      ],
      "op": "CALLER",
      "path": "5"
    },
    "671": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5376,
        5382
      ],
      "op": "DUP6",
      "path": "5"
    },
    "672": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5357,
        5373
      ],
      "op": "DUP5",
      "path": "5"
    },
    "673": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5357,
        5382
      ],
      "op": "SUB",
      "path": "5"
    },
    "674": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5328,
        5336
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2DB"
    },
    "677": {
      "fn": "VegaToken.transferFrom",
      "jump": "i",
      "offset": [
        5328,
        5383
      ],
      "op": "JUMP",
      "path": "5"
    },
    "678": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5328,
        5383
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "679": {
      "op": "POP"
    },
    "680": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5411,
        5415
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 10,
      "value": "0x1"
    },
    "682": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        5411,
        5415
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "683": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        4914,
        5422
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "684": {
      "op": "POP"
    },
    "685": {
      "op": "POP"
    },
    "686": {
      "op": "POP"
    },
    "687": {
      "op": "POP"
    },
    "688": {
      "fn": "VegaToken.transferFrom",
      "jump": "o",
      "offset": [
        4914,
        5422
      ],
      "op": "JUMP",
      "path": "5"
    },
    "689": {
      "offset": [
        624,
        683
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "690": {
      "offset": [
        670,
        682
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2BD"
    },
    "693": {
      "offset": [
        615,
        617
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x12"
    },
    "695": {
      "offset": [
        670,
        672
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA"
    },
    "697": {
      "offset": [
        670,
        682
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x755"
    },
    "700": {
      "fn": "VegaToken.transferFrom",
      "jump": "i",
      "offset": [
        670,
        682
      ],
      "op": "JUMP",
      "path": "5"
    },
    "701": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        670,
        682
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "702": {
      "offset": [
        661,
        683
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2CB"
    },
    "705": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        661,
        683
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "706": {
      "offset": [
        661,
        666
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x3B9ACA00"
    },
    "711": {
      "offset": [
        661,
        683
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x800"
    },
    "714": {
      "fn": "VegaToken.transferFrom",
      "jump": "i",
      "offset": [
        661,
        683
      ],
      "op": "JUMP",
      "path": "5"
    },
    "715": {
      "fn": "VegaToken.transferFrom",
      "offset": [
        661,
        683
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "716": {
      "offset": [
        624,
        683
      ],
      "op": "DUP2",
      "path": "5"
    },
    "717": {
      "fn": "VegaToken.transferFrom",
      "jump": "o",
      "offset": [
        624,
        683
      ],
      "op": "JUMP",
      "path": "5"
    },
    "718": {
      "fn": "VegaToken.transfer",
      "offset": [
        3652,
        3858
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "719": {
      "fn": "VegaToken.transfer",
      "offset": [
        3770,
        3774
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "721": {
      "fn": "VegaToken.transfer",
      "offset": [
        3790,
        3830
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 11,
      "value": "0x1F8"
    },
    "724": {
      "fn": "VegaToken.transfer",
      "offset": [
        3800,
        3810
      ],
      "op": "CALLER",
      "path": "5"
    },
    "725": {
      "fn": "VegaToken.transfer",
      "offset": [
        3812,
        3821
      ],
      "op": "DUP5",
      "path": "5"
    },
    "726": {
      "fn": "VegaToken.transfer",
      "offset": [
        3823,
        3829
      ],
      "op": "DUP5",
      "path": "5"
    },
    "727": {
      "fn": "VegaToken.transfer",
      "offset": [
        3790,
        3799
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3FF"
    },
    "730": {
      "fn": "VegaToken.transfer",
      "jump": "i",
      "offset": [
        3790,
        3830
      ],
      "op": "JUMP",
      "path": "5"
    },
    "731": {
      "fn": "VegaToken._approve",
      "offset": [
        7061,
        7431
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "736": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "738": {
      "op": "SHL"
    },
    "739": {
      "op": "SUB"
    },
    "740": {
      "fn": "VegaToken._approve",
      "offset": [
        7192,
        7211
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 12
    },
    "741": {
      "branch": 23,
      "fn": "VegaToken._approve",
      "offset": [
        7192,
        7211
      ],
      "op": "AND",
      "path": "5"
    },
    "742": {
      "fn": "VegaToken._approve",
      "offset": [
        7184,
        7252
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x33D"
    },
    "745": {
      "branch": 23,
      "fn": "VegaToken._approve",
      "offset": [
        7184,
        7252
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "746": {
      "fn": "VegaToken._approve",
      "offset": [
        7184,
        7252
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "748": {
      "fn": "VegaToken._approve",
      "offset": [
        7184,
        7252
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "749": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "753": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "755": {
      "op": "SHL"
    },
    "756": {
      "fn": "VegaToken._approve",
      "offset": [
        7184,
        7252
      ],
      "op": "DUP2",
      "path": "5"
    },
    "757": {
      "fn": "VegaToken._approve",
      "offset": [
        7184,
        7252
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "758": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "760": {
      "fn": "VegaToken._approve",
      "offset": [
        7184,
        7252
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "762": {
      "fn": "VegaToken._approve",
      "offset": [
        7184,
        7252
      ],
      "op": "DUP3",
      "path": "5"
    },
    "763": {
      "fn": "VegaToken._approve",
      "offset": [
        7184,
        7252
      ],
      "op": "ADD",
      "path": "5"
    },
    "764": {
      "op": "MSTORE"
    },
    "765": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "767": {
      "op": "DUP1"
    },
    "768": {
      "op": "DUP3"
    },
    "769": {
      "op": "ADD"
    },
    "770": {
      "op": "MSTORE"
    },
    "771": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "804": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "806": {
      "op": "DUP3"
    },
    "807": {
      "op": "ADD"
    },
    "808": {
      "op": "MSTORE"
    },
    "809": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "814": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "816": {
      "op": "SHL"
    },
    "817": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "819": {
      "op": "DUP3"
    },
    "820": {
      "op": "ADD"
    },
    "821": {
      "op": "MSTORE"
    },
    "822": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "824": {
      "op": "ADD"
    },
    "825": {
      "fn": "VegaToken._approve",
      "offset": [
        7184,
        7252
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x290"
    },
    "828": {
      "op": "JUMP"
    },
    "829": {
      "fn": "VegaToken._approve",
      "offset": [
        7184,
        7252
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "834": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "836": {
      "op": "SHL"
    },
    "837": {
      "op": "SUB"
    },
    "838": {
      "fn": "VegaToken._approve",
      "offset": [
        7270,
        7291
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 13
    },
    "839": {
      "branch": 24,
      "fn": "VegaToken._approve",
      "offset": [
        7270,
        7291
      ],
      "op": "AND",
      "path": "5"
    },
    "840": {
      "fn": "VegaToken._approve",
      "offset": [
        7262,
        7330
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x39E"
    },
    "843": {
      "branch": 24,
      "fn": "VegaToken._approve",
      "offset": [
        7262,
        7330
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "844": {
      "fn": "VegaToken._approve",
      "offset": [
        7262,
        7330
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "846": {
      "fn": "VegaToken._approve",
      "offset": [
        7262,
        7330
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "847": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "851": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "853": {
      "op": "SHL"
    },
    "854": {
      "fn": "VegaToken._approve",
      "offset": [
        7262,
        7330
      ],
      "op": "DUP2",
      "path": "5"
    },
    "855": {
      "fn": "VegaToken._approve",
      "offset": [
        7262,
        7330
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "856": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "858": {
      "fn": "VegaToken._approve",
      "offset": [
        7262,
        7330
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "860": {
      "fn": "VegaToken._approve",
      "offset": [
        7262,
        7330
      ],
      "op": "DUP3",
      "path": "5"
    },
    "861": {
      "fn": "VegaToken._approve",
      "offset": [
        7262,
        7330
      ],
      "op": "ADD",
      "path": "5"
    },
    "862": {
      "op": "MSTORE"
    },
    "863": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "865": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "867": {
      "op": "DUP3"
    },
    "868": {
      "op": "ADD"
    },
    "869": {
      "op": "MSTORE"
    },
    "870": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "903": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "905": {
      "op": "DUP3"
    },
    "906": {
      "op": "ADD"
    },
    "907": {
      "op": "MSTORE"
    },
    "908": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "911": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "913": {
      "op": "SHL"
    },
    "914": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "916": {
      "op": "DUP3"
    },
    "917": {
      "op": "ADD"
    },
    "918": {
      "op": "MSTORE"
    },
    "919": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "921": {
      "op": "ADD"
    },
    "922": {
      "fn": "VegaToken._approve",
      "offset": [
        7262,
        7330
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x290"
    },
    "925": {
      "op": "JUMP"
    },
    "926": {
      "fn": "VegaToken._approve",
      "offset": [
        7262,
        7330
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "931": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "933": {
      "op": "SHL"
    },
    "934": {
      "op": "SUB"
    },
    "935": {
      "fn": "VegaToken._approve",
      "offset": [
        7341,
        7359
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 14
    },
    "936": {
      "fn": "VegaToken._approve",
      "offset": [
        7341,
        7359
      ],
      "op": "DUP2",
      "path": "5"
    },
    "937": {
      "fn": "VegaToken._approve",
      "offset": [
        7341,
        7359
      ],
      "op": "AND",
      "path": "5"
    },
    "938": {
      "fn": "VegaToken._approve",
      "offset": [
        7341,
        7359
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "940": {
      "fn": "VegaToken._approve",
      "offset": [
        7341,
        7359
      ],
      "op": "DUP2",
      "path": "5"
    },
    "941": {
      "fn": "VegaToken._approve",
      "offset": [
        7341,
        7359
      ],
      "op": "DUP2",
      "path": "5"
    },
    "942": {
      "fn": "VegaToken._approve",
      "offset": [
        7341,
        7359
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "943": {
      "fn": "VegaToken._approve",
      "offset": [
        7341,
        7352
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "945": {
      "fn": "VegaToken._approve",
      "offset": [
        7341,
        7359
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "947": {
      "fn": "VegaToken._approve",
      "offset": [
        7341,
        7359
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "948": {
      "fn": "VegaToken._approve",
      "offset": [
        7341,
        7359
      ],
      "op": "DUP2",
      "path": "5"
    },
    "949": {
      "fn": "VegaToken._approve",
      "offset": [
        7341,
        7359
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "950": {
      "fn": "VegaToken._approve",
      "offset": [
        7341,
        7359
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "952": {
      "fn": "VegaToken._approve",
      "offset": [
        7341,
        7359
      ],
      "op": "DUP1",
      "path": "5"
    },
    "953": {
      "fn": "VegaToken._approve",
      "offset": [
        7341,
        7359
      ],
      "op": "DUP4",
      "path": "5"
    },
    "954": {
      "fn": "VegaToken._approve",
      "offset": [
        7341,
        7359
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "955": {
      "fn": "VegaToken._approve",
      "offset": [
        7341,
        7368
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "956": {
      "fn": "VegaToken._approve",
      "offset": [
        7341,
        7368
      ],
      "op": "DUP8",
      "path": "5"
    },
    "957": {
      "fn": "VegaToken._approve",
      "offset": [
        7341,
        7368
      ],
      "op": "AND",
      "path": "5"
    },
    "958": {
      "fn": "VegaToken._approve",
      "offset": [
        7341,
        7368
      ],
      "op": "DUP1",
      "path": "5"
    },
    "959": {
      "fn": "VegaToken._approve",
      "offset": [
        7341,
        7368
      ],
      "op": "DUP5",
      "path": "5"
    },
    "960": {
      "fn": "VegaToken._approve",
      "offset": [
        7341,
        7368
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "961": {
      "fn": "VegaToken._approve",
      "offset": [
        7341,
        7368
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "962": {
      "fn": "VegaToken._approve",
      "offset": [
        7341,
        7368
      ],
      "op": "DUP3",
      "path": "5"
    },
    "963": {
      "fn": "VegaToken._approve",
      "offset": [
        7341,
        7368
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "964": {
      "fn": "VegaToken._approve",
      "offset": [
        7341,
        7368
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "965": {
      "fn": "VegaToken._approve",
      "offset": [
        7341,
        7368
      ],
      "op": "DUP3",
      "path": "5"
    },
    "966": {
      "fn": "VegaToken._approve",
      "offset": [
        7341,
        7368
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "967": {
      "fn": "VegaToken._approve",
      "offset": [
        7341,
        7368
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "968": {
      "fn": "VegaToken._approve",
      "offset": [
        7341,
        7377
      ],
      "op": "DUP6",
      "path": "5"
    },
    "969": {
      "fn": "VegaToken._approve",
      "offset": [
        7341,
        7377
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "970": {
      "fn": "VegaToken._approve",
      "offset": [
        7341,
        7377
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "971": {
      "fn": "VegaToken._approve",
      "offset": [
        7392,
        7424
      ],
      "op": "SWAP1",
      "path": "5",
      "statement": 15
    },
    "972": {
      "fn": "VegaToken._approve",
      "offset": [
        7392,
        7424
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "973": {
      "op": "DUP5"
    },
    "974": {
      "op": "DUP2"
    },
    "975": {
      "op": "MSTORE"
    },
    "976": {
      "fn": "VegaToken._approve",
      "offset": [
        7392,
        7424
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1009": {
      "fn": "VegaToken._approve",
      "offset": [
        7392,
        7424
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1010": {
      "fn": "VegaToken._approve",
      "offset": [
        7392,
        7424
      ],
      "op": "ADD",
      "path": "5"
    },
    "1011": {
      "fn": "VegaToken._approve",
      "offset": [
        7392,
        7424
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1013": {
      "fn": "VegaToken._approve",
      "offset": [
        7392,
        7424
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1014": {
      "fn": "VegaToken._approve",
      "offset": [
        7392,
        7424
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1015": {
      "fn": "VegaToken._approve",
      "offset": [
        7392,
        7424
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1016": {
      "fn": "VegaToken._approve",
      "offset": [
        7392,
        7424
      ],
      "op": "SUB",
      "path": "5"
    },
    "1017": {
      "fn": "VegaToken._approve",
      "offset": [
        7392,
        7424
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1018": {
      "fn": "VegaToken._approve",
      "offset": [
        7392,
        7424
      ],
      "op": "LOG3",
      "path": "5"
    },
    "1019": {
      "fn": "VegaToken._approve",
      "offset": [
        7392,
        7424
      ],
      "op": "POP",
      "path": "5"
    },
    "1020": {
      "fn": "VegaToken._approve",
      "offset": [
        7392,
        7424
      ],
      "op": "POP",
      "path": "5"
    },
    "1021": {
      "fn": "VegaToken._approve",
      "offset": [
        7061,
        7431
      ],
      "op": "POP",
      "path": "5"
    },
    "1022": {
      "fn": "VegaToken._approve",
      "offset": [
        7061,
        7431
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1023": {
      "fn": "VegaToken._approve",
      "offset": [
        7061,
        7431
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1024": {
      "fn": "VegaToken._approve",
      "jump": "o",
      "offset": [
        7061,
        7431
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1026": {
      "fn": "VegaToken._transfer",
      "offset": [
        5896,
        6528
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1028": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1030": {
      "op": "SHL"
    },
    "1031": {
      "op": "SUB"
    },
    "1032": {
      "op": "DUP4"
    },
    "1033": {
      "op": "AND"
    },
    "1034": {
      "branch": 25,
      "fn": "VegaToken._transfer",
      "offset": [
        6031,
        6051
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 16,
      "value": "0x463"
    },
    "1037": {
      "branch": 25,
      "fn": "VegaToken._transfer",
      "offset": [
        6031,
        6051
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1038": {
      "fn": "VegaToken._transfer",
      "offset": [
        6023,
        6093
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1040": {
      "fn": "VegaToken._transfer",
      "offset": [
        6023,
        6093
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1041": {
      "fn": "VegaToken._transfer",
      "offset": [
        6023,
        6093
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x461BCD"
    },
    "1045": {
      "fn": "VegaToken._transfer",
      "offset": [
        6023,
        6093
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE5"
    },
    "1047": {
      "op": "SHL"
    },
    "1048": {
      "op": "DUP2"
    },
    "1049": {
      "op": "MSTORE"
    },
    "1050": {
      "fn": "VegaToken._transfer",
      "offset": [
        6023,
        6093
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1052": {
      "fn": "VegaToken._transfer",
      "offset": [
        6023,
        6093
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1054": {
      "op": "DUP3"
    },
    "1055": {
      "fn": "VegaToken._transfer",
      "offset": [
        6023,
        6093
      ],
      "op": "ADD",
      "path": "5"
    },
    "1056": {
      "fn": "VegaToken._transfer",
      "offset": [
        6023,
        6093
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1057": {
      "fn": "VegaToken._transfer",
      "offset": [
        6023,
        6093
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x25"
    },
    "1059": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1061": {
      "op": "DUP3"
    },
    "1062": {
      "op": "ADD"
    },
    "1063": {
      "op": "MSTORE"
    },
    "1064": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "1097": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1099": {
      "op": "DUP3"
    },
    "1100": {
      "op": "ADD"
    },
    "1101": {
      "op": "MSTORE"
    },
    "1102": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "1108": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "1110": {
      "op": "SHL"
    },
    "1111": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1113": {
      "op": "DUP3"
    },
    "1114": {
      "op": "ADD"
    },
    "1115": {
      "op": "MSTORE"
    },
    "1116": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1118": {
      "op": "ADD"
    },
    "1119": {
      "op": "PUSH2",
      "value": "0x290"
    },
    "1122": {
      "op": "JUMP"
    },
    "1123": {
      "fn": "VegaToken._transfer",
      "offset": [
        6023,
        6093
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1126": {
      "fn": "VegaToken._transfer",
      "offset": [
        6023,
        6093
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1128": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1130": {
      "op": "SHL"
    },
    "1131": {
      "op": "SUB"
    },
    "1132": {
      "op": "DUP3"
    },
    "1133": {
      "op": "AND"
    },
    "1134": {
      "branch": 26,
      "fn": "VegaToken._transfer",
      "offset": [
        6111,
        6134
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 17,
      "value": "0x4C5"
    },
    "1137": {
      "branch": 26,
      "fn": "VegaToken._transfer",
      "offset": [
        6111,
        6134
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1138": {
      "fn": "VegaToken._transfer",
      "offset": [
        6103,
        6174
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1140": {
      "fn": "VegaToken._transfer",
      "offset": [
        6103,
        6174
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1141": {
      "fn": "VegaToken._transfer",
      "offset": [
        6103,
        6174
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x461BCD"
    },
    "1145": {
      "fn": "VegaToken._transfer",
      "offset": [
        6103,
        6174
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE5"
    },
    "1147": {
      "op": "SHL"
    },
    "1148": {
      "op": "DUP2"
    },
    "1149": {
      "op": "MSTORE"
    },
    "1150": {
      "fn": "VegaToken._transfer",
      "offset": [
        6103,
        6174
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1152": {
      "fn": "VegaToken._transfer",
      "offset": [
        6103,
        6174
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1154": {
      "op": "DUP3"
    },
    "1155": {
      "fn": "VegaToken._transfer",
      "offset": [
        6103,
        6174
      ],
      "op": "ADD",
      "path": "5"
    },
    "1156": {
      "fn": "VegaToken._transfer",
      "offset": [
        6103,
        6174
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1157": {
      "fn": "VegaToken._transfer",
      "offset": [
        6103,
        6174
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x23"
    },
    "1159": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1161": {
      "op": "DUP3"
    },
    "1162": {
      "op": "ADD"
    },
    "1163": {
      "op": "MSTORE"
    },
    "1164": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "1197": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1199": {
      "op": "DUP3"
    },
    "1200": {
      "op": "ADD"
    },
    "1201": {
      "op": "MSTORE"
    },
    "1202": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "1206": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "1208": {
      "op": "SHL"
    },
    "1209": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1211": {
      "op": "DUP3"
    },
    "1212": {
      "op": "ADD"
    },
    "1213": {
      "op": "MSTORE"
    },
    "1214": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1216": {
      "op": "ADD"
    },
    "1217": {
      "op": "PUSH2",
      "value": "0x290"
    },
    "1220": {
      "op": "JUMP"
    },
    "1221": {
      "fn": "VegaToken._transfer",
      "offset": [
        6103,
        6174
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1224": {
      "fn": "VegaToken._transfer",
      "offset": [
        6103,
        6174
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1226": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1228": {
      "op": "SHL"
    },
    "1229": {
      "op": "SUB"
    },
    "1230": {
      "op": "DUP4"
    },
    "1231": {
      "op": "AND"
    },
    "1232": {
      "fn": "VegaToken._transfer",
      "offset": [
        6209,
        6226
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1234": {
      "fn": "VegaToken._transfer",
      "offset": [
        6209,
        6226
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1235": {
      "fn": "VegaToken._transfer",
      "offset": [
        6185,
        6206
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1236": {
      "fn": "VegaToken._transfer",
      "offset": [
        6209,
        6226
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1237": {
      "fn": "VegaToken._transfer",
      "offset": [
        6209,
        6226
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1239": {
      "fn": "VegaToken._transfer",
      "offset": [
        6209,
        6226
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1241": {
      "op": "MSTORE"
    },
    "1242": {
      "fn": "VegaToken._transfer",
      "offset": [
        6209,
        6226
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1244": {
      "fn": "VegaToken._transfer",
      "offset": [
        6209,
        6226
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1245": {
      "fn": "VegaToken._transfer",
      "offset": [
        6209,
        6226
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1246": {
      "fn": "VegaToken._transfer",
      "offset": [
        6209,
        6226
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1247": {
      "fn": "VegaToken._transfer",
      "offset": [
        6209,
        6226
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1248": {
      "fn": "VegaToken._transfer",
      "offset": [
        6209,
        6226
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1249": {
      "fn": "VegaToken._transfer",
      "offset": [
        6257,
        6280
      ],
      "op": "LT",
      "path": "5",
      "statement": 18
    },
    "1250": {
      "fn": "VegaToken._transfer",
      "offset": [
        6257,
        6280
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1251": {
      "branch": 27,
      "fn": "VegaToken._transfer",
      "offset": [
        6257,
        6280
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x53D"
    },
    "1254": {
      "branch": 27,
      "fn": "VegaToken._transfer",
      "offset": [
        6257,
        6280
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1255": {
      "fn": "VegaToken._transfer",
      "offset": [
        6236,
        6344
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1257": {
      "fn": "VegaToken._transfer",
      "offset": [
        6236,
        6344
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1258": {
      "fn": "VegaToken._transfer",
      "offset": [
        6236,
        6344
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x461BCD"
    },
    "1262": {
      "fn": "VegaToken._transfer",
      "offset": [
        6236,
        6344
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE5"
    },
    "1264": {
      "op": "SHL"
    },
    "1265": {
      "op": "DUP2"
    },
    "1266": {
      "op": "MSTORE"
    },
    "1267": {
      "fn": "VegaToken._transfer",
      "offset": [
        6236,
        6344
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1269": {
      "fn": "VegaToken._transfer",
      "offset": [
        6236,
        6344
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1271": {
      "op": "DUP3"
    },
    "1272": {
      "fn": "VegaToken._transfer",
      "offset": [
        6236,
        6344
      ],
      "op": "ADD",
      "path": "5"
    },
    "1273": {
      "fn": "VegaToken._transfer",
      "offset": [
        6236,
        6344
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1274": {
      "fn": "VegaToken._transfer",
      "offset": [
        6236,
        6344
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x26"
    },
    "1276": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1278": {
      "op": "DUP3"
    },
    "1279": {
      "op": "ADD"
    },
    "1280": {
      "op": "MSTORE"
    },
    "1281": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "1314": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1316": {
      "op": "DUP3"
    },
    "1317": {
      "op": "ADD"
    },
    "1318": {
      "op": "MSTORE"
    },
    "1319": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "1326": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1328": {
      "op": "SHL"
    },
    "1329": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1331": {
      "op": "DUP3"
    },
    "1332": {
      "op": "ADD"
    },
    "1333": {
      "op": "MSTORE"
    },
    "1334": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1336": {
      "op": "ADD"
    },
    "1337": {
      "op": "PUSH2",
      "value": "0x290"
    },
    "1340": {
      "op": "JUMP"
    },
    "1341": {
      "fn": "VegaToken._transfer",
      "offset": [
        6236,
        6344
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1344": {
      "fn": "VegaToken._transfer",
      "offset": [
        6236,
        6344
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1346": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1348": {
      "op": "SHL"
    },
    "1349": {
      "op": "SUB"
    },
    "1350": {
      "op": "DUP1"
    },
    "1351": {
      "op": "DUP6"
    },
    "1352": {
      "fn": "VegaToken._transfer",
      "offset": [
        6378,
        6395
      ],
      "op": "AND",
      "path": "5",
      "statement": 19
    },
    "1353": {
      "fn": "VegaToken._transfer",
      "offset": [
        6378,
        6395
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1355": {
      "fn": "VegaToken._transfer",
      "offset": [
        6378,
        6395
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1356": {
      "fn": "VegaToken._transfer",
      "offset": [
        6378,
        6395
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1357": {
      "fn": "VegaToken._transfer",
      "offset": [
        6378,
        6395
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1358": {
      "fn": "VegaToken._transfer",
      "offset": [
        6378,
        6395
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1360": {
      "fn": "VegaToken._transfer",
      "offset": [
        6378,
        6395
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1362": {
      "op": "MSTORE"
    },
    "1363": {
      "fn": "VegaToken._transfer",
      "offset": [
        6378,
        6395
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1365": {
      "fn": "VegaToken._transfer",
      "offset": [
        6378,
        6395
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1366": {
      "fn": "VegaToken._transfer",
      "offset": [
        6378,
        6395
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1367": {
      "fn": "VegaToken._transfer",
      "offset": [
        6378,
        6395
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1368": {
      "fn": "VegaToken._transfer",
      "offset": [
        6378,
        6395
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1369": {
      "fn": "VegaToken._transfer",
      "offset": [
        6378,
        6395
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1370": {
      "fn": "VegaToken._transfer",
      "offset": [
        6398,
        6420
      ],
      "op": "SUB",
      "path": "5"
    },
    "1371": {
      "fn": "VegaToken._transfer",
      "offset": [
        6398,
        6420
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1372": {
      "fn": "VegaToken._transfer",
      "offset": [
        6398,
        6420
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1373": {
      "fn": "VegaToken._transfer",
      "offset": [
        6378,
        6420
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1374": {
      "fn": "VegaToken._transfer",
      "offset": [
        6378,
        6420
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1375": {
      "fn": "VegaToken._transfer",
      "offset": [
        6440,
        6460
      ],
      "op": "AND",
      "path": "5",
      "statement": 20
    },
    "1376": {
      "fn": "VegaToken._transfer",
      "offset": [
        6440,
        6460
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1377": {
      "fn": "VegaToken._transfer",
      "offset": [
        6440,
        6460
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1378": {
      "fn": "VegaToken._transfer",
      "offset": [
        6440,
        6460
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1379": {
      "fn": "VegaToken._transfer",
      "offset": [
        6440,
        6460
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1380": {
      "fn": "VegaToken._transfer",
      "offset": [
        6440,
        6460
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1381": {
      "fn": "VegaToken._transfer",
      "offset": [
        6440,
        6460
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1382": {
      "fn": "VegaToken._transfer",
      "offset": [
        6440,
        6460
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1383": {
      "fn": "VegaToken._transfer",
      "offset": [
        6440,
        6470
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1384": {
      "fn": "VegaToken._transfer",
      "offset": [
        6440,
        6470
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1385": {
      "fn": "VegaToken._transfer",
      "offset": [
        6398,
        6420
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1386": {
      "fn": "VegaToken._transfer",
      "offset": [
        6398,
        6420
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x574"
    },
    "1389": {
      "fn": "VegaToken._transfer",
      "offset": [
        6378,
        6395
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1390": {
      "fn": "VegaToken._transfer",
      "offset": [
        6440,
        6470
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1391": {
      "fn": "VegaToken._transfer",
      "offset": [
        6440,
        6470
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1392": {
      "fn": "VegaToken._transfer",
      "offset": [
        6398,
        6420
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6FA"
    },
    "1395": {
      "fn": "VegaToken._transfer",
      "offset": [
        6398,
        6420
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1396": {
      "fn": "VegaToken._transfer",
      "offset": [
        6440,
        6470
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1397": {
      "fn": "VegaToken._transfer",
      "jump": "i",
      "offset": [
        6440,
        6470
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1398": {
      "fn": "VegaToken._transfer",
      "offset": [
        6440,
        6470
      ],
      "op": "POP",
      "path": "5"
    },
    "1399": {
      "fn": "VegaToken._transfer",
      "offset": [
        6440,
        6470
      ],
      "op": "POP",
      "path": "5"
    },
    "1400": {
      "fn": "VegaToken._transfer",
      "offset": [
        6440,
        6470
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1401": {
      "fn": "VegaToken._transfer",
      "offset": [
        6440,
        6470
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1402": {
      "op": "SSTORE"
    },
    "1403": {
      "op": "POP"
    },
    "1404": {
      "fn": "VegaToken._transfer",
      "offset": [
        6486,
        6521
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 21
    },
    "1405": {
      "fn": "VegaToken._transfer",
      "offset": [
        6486,
        6521
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1409": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1411": {
      "op": "SHL"
    },
    "1412": {
      "op": "SUB"
    },
    "1413": {
      "op": "AND"
    },
    "1414": {
      "op": "DUP5"
    },
    "1415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1419": {
      "fn": "VegaToken._transfer",
      "offset": [
        6486,
        6521
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA0"
    },
    "1421": {
      "fn": "VegaToken._transfer",
      "offset": [
        6486,
        6521
      ],
      "op": "SHL",
      "path": "5"
    },
    "1422": {
      "fn": "VegaToken._transfer",
      "offset": [
        6486,
        6521
      ],
      "op": "SUB",
      "path": "5"
    },
    "1423": {
      "fn": "VegaToken._transfer",
      "offset": [
        6486,
        6521
      ],
      "op": "AND",
      "path": "5"
    },
    "1424": {
      "fn": "VegaToken._transfer",
      "offset": [
        6486,
        6521
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1457": {
      "fn": "VegaToken._transfer",
      "offset": [
        6486,
        6521
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1458": {
      "fn": "VegaToken._transfer",
      "offset": [
        6486,
        6521
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1460": {
      "fn": "VegaToken._transfer",
      "offset": [
        6486,
        6521
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1461": {
      "fn": "VegaToken._transfer",
      "offset": [
        6486,
        6521
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5C0"
    },
    "1464": {
      "fn": "VegaToken._transfer",
      "offset": [
        6486,
        6521
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1465": {
      "op": "DUP2"
    },
    "1466": {
      "op": "MSTORE"
    },
    "1467": {
      "fn": "VegaToken._transfer",
      "offset": [
        6486,
        6521
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1469": {
      "fn": "VegaToken._transfer",
      "offset": [
        6486,
        6521
      ],
      "op": "ADD",
      "path": "5"
    },
    "1470": {
      "fn": "VegaToken._transfer",
      "offset": [
        6486,
        6521
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1471": {
      "fn": "VegaToken._transfer",
      "offset": [
        6486,
        6521
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1472": {
      "fn": "VegaToken._transfer",
      "offset": [
        6486,
        6521
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1473": {
      "fn": "VegaToken._transfer",
      "offset": [
        6486,
        6521
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1475": {
      "fn": "VegaToken._transfer",
      "offset": [
        6486,
        6521
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1476": {
      "fn": "VegaToken._transfer",
      "offset": [
        6013,
        6528
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1477": {
      "fn": "VegaToken._transfer",
      "offset": [
        5896,
        6528
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1478": {
      "fn": "VegaToken._transfer",
      "offset": [
        5896,
        6528
      ],
      "op": "SUB",
      "path": "5"
    },
    "1479": {
      "fn": "VegaToken._transfer",
      "offset": [
        5896,
        6528
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1480": {
      "fn": "VegaToken._transfer",
      "jump": "o",
      "offset": [
        5896,
        6528
      ],
      "op": "LOG3",
      "path": "5"
    },
    "1481": {
      "op": "POP"
    },
    "1482": {
      "op": "POP"
    },
    "1483": {
      "op": "POP"
    },
    "1484": {
      "op": "POP"
    },
    "1485": {
      "op": "JUMP"
    },
    "1486": {
      "op": "JUMPDEST"
    },
    "1487": {
      "op": "DUP1"
    },
    "1488": {
      "op": "CALLDATALOAD"
    },
    "1489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1493": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1495": {
      "op": "SHL"
    },
    "1496": {
      "op": "SUB"
    },
    "1497": {
      "op": "DUP2"
    },
    "1498": {
      "op": "AND"
    },
    "1499": {
      "op": "DUP2"
    },
    "1500": {
      "op": "EQ"
    },
    "1501": {
      "op": "PUSH2",
      "value": "0x5E5"
    },
    "1504": {
      "op": "JUMPI"
    },
    "1505": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1507": {
      "op": "DUP1"
    },
    "1508": {
      "jump": "o",
      "op": "REVERT"
    },
    "1509": {
      "op": "JUMPDEST"
    },
    "1510": {
      "op": "SWAP2"
    },
    "1511": {
      "op": "SWAP1"
    },
    "1512": {
      "op": "POP"
    },
    "1513": {
      "op": "JUMP"
    },
    "1514": {
      "op": "JUMPDEST"
    },
    "1515": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1517": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1519": {
      "op": "DUP3"
    },
    "1520": {
      "op": "DUP5"
    },
    "1521": {
      "op": "SUB"
    },
    "1522": {
      "op": "SLT"
    },
    "1523": {
      "op": "ISZERO"
    },
    "1524": {
      "op": "PUSH2",
      "value": "0x5FC"
    },
    "1527": {
      "op": "JUMPI"
    },
    "1528": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1530": {
      "op": "DUP1"
    },
    "1531": {
      "jump": "i",
      "op": "REVERT"
    },
    "1532": {
      "op": "JUMPDEST"
    },
    "1533": {
      "op": "PUSH2",
      "value": "0x605"
    },
    "1536": {
      "op": "DUP3"
    },
    "1537": {
      "op": "PUSH2",
      "value": "0x5CE"
    },
    "1540": {
      "op": "JUMP"
    },
    "1541": {
      "op": "JUMPDEST"
    },
    "1542": {
      "jump": "o",
      "op": "SWAP4"
    },
    "1543": {
      "op": "SWAP3"
    },
    "1544": {
      "op": "POP"
    },
    "1545": {
      "op": "POP"
    },
    "1546": {
      "op": "POP"
    },
    "1547": {
      "op": "JUMP"
    },
    "1548": {
      "op": "JUMPDEST"
    },
    "1549": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1551": {
      "op": "DUP1"
    },
    "1552": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1554": {
      "op": "DUP4"
    },
    "1555": {
      "op": "DUP6"
    },
    "1556": {
      "op": "SUB"
    },
    "1557": {
      "op": "SLT"
    },
    "1558": {
      "op": "ISZERO"
    },
    "1559": {
      "op": "PUSH2",
      "value": "0x61F"
    },
    "1562": {
      "op": "JUMPI"
    },
    "1563": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1565": {
      "op": "DUP1"
    },
    "1566": {
      "jump": "i",
      "op": "REVERT"
    },
    "1567": {
      "op": "JUMPDEST"
    },
    "1568": {
      "op": "PUSH2",
      "value": "0x628"
    },
    "1571": {
      "op": "DUP4"
    },
    "1572": {
      "op": "PUSH2",
      "value": "0x5CE"
    },
    "1575": {
      "op": "JUMP"
    },
    "1576": {
      "op": "JUMPDEST"
    },
    "1577": {
      "op": "SWAP2"
    },
    "1578": {
      "op": "POP"
    },
    "1579": {
      "jump": "i",
      "op": "PUSH2",
      "value": "0x636"
    },
    "1582": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1584": {
      "op": "DUP5"
    },
    "1585": {
      "op": "ADD"
    },
    "1586": {
      "op": "PUSH2",
      "value": "0x5CE"
    },
    "1589": {
      "op": "JUMP"
    },
    "1590": {
      "op": "JUMPDEST"
    },
    "1591": {
      "op": "SWAP1"
    },
    "1592": {
      "op": "POP"
    },
    "1593": {
      "jump": "o",
      "op": "SWAP3"
    },
    "1594": {
      "op": "POP"
    },
    "1595": {
      "op": "SWAP3"
    },
    "1596": {
      "op": "SWAP1"
    },
    "1597": {
      "op": "POP"
    },
    "1598": {
      "op": "JUMP"
    },
    "1599": {
      "op": "JUMPDEST"
    },
    "1600": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1602": {
      "op": "DUP1"
    },
    "1603": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1605": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1607": {
      "op": "DUP5"
    },
    "1608": {
      "op": "DUP7"
    },
    "1609": {
      "op": "SUB"
    },
    "1610": {
      "op": "SLT"
    },
    "1611": {
      "op": "ISZERO"
    },
    "1612": {
      "op": "PUSH2",
      "value": "0x654"
    },
    "1615": {
      "op": "JUMPI"
    },
    "1616": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1618": {
      "op": "DUP1"
    },
    "1619": {
      "jump": "i",
      "op": "REVERT"
    },
    "1620": {
      "op": "JUMPDEST"
    },
    "1621": {
      "op": "PUSH2",
      "value": "0x65D"
    },
    "1624": {
      "op": "DUP5"
    },
    "1625": {
      "op": "PUSH2",
      "value": "0x5CE"
    },
    "1628": {
      "op": "JUMP"
    },
    "1629": {
      "op": "JUMPDEST"
    },
    "1630": {
      "op": "SWAP3"
    },
    "1631": {
      "op": "POP"
    },
    "1632": {
      "jump": "i",
      "op": "PUSH2",
      "value": "0x66B"
    },
    "1635": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1637": {
      "op": "DUP6"
    },
    "1638": {
      "op": "ADD"
    },
    "1639": {
      "op": "PUSH2",
      "value": "0x5CE"
    },
    "1642": {
      "op": "JUMP"
    },
    "1643": {
      "op": "JUMPDEST"
    },
    "1644": {
      "op": "SWAP2"
    },
    "1645": {
      "op": "POP"
    },
    "1646": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1648": {
      "op": "DUP5"
    },
    "1649": {
      "op": "ADD"
    },
    "1650": {
      "op": "CALLDATALOAD"
    },
    "1651": {
      "op": "SWAP1"
    },
    "1652": {
      "op": "POP"
    },
    "1653": {
      "jump": "o",
      "op": "SWAP3"
    },
    "1654": {
      "op": "POP"
    },
    "1655": {
      "op": "SWAP3"
    },
    "1656": {
      "op": "POP"
    },
    "1657": {
      "op": "SWAP3"
    },
    "1658": {
      "op": "JUMP"
    },
    "1659": {
      "op": "JUMPDEST"
    },
    "1660": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1662": {
      "op": "DUP1"
    },
    "1663": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1665": {
      "op": "DUP4"
    },
    "1666": {
      "op": "DUP6"
    },
    "1667": {
      "op": "SUB"
    },
    "1668": {
      "op": "SLT"
    },
    "1669": {
      "op": "ISZERO"
    },
    "1670": {
      "op": "PUSH2",
      "value": "0x68E"
    },
    "1673": {
      "op": "JUMPI"
    },
    "1674": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1676": {
      "op": "DUP1"
    },
    "1677": {
      "jump": "i",
      "op": "REVERT"
    },
    "1678": {
      "op": "JUMPDEST"
    },
    "1679": {
      "op": "PUSH2",
      "value": "0x697"
    },
    "1682": {
      "op": "DUP4"
    },
    "1683": {
      "op": "PUSH2",
      "value": "0x5CE"
    },
    "1686": {
      "op": "JUMP"
    },
    "1687": {
      "op": "JUMPDEST"
    },
    "1688": {
      "op": "SWAP5"
    },
    "1689": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1691": {
      "op": "SWAP4"
    },
    "1692": {
      "op": "SWAP1"
    },
    "1693": {
      "op": "SWAP4"
    },
    "1694": {
      "op": "ADD"
    },
    "1695": {
      "jump": "o",
      "op": "CALLDATALOAD"
    },
    "1696": {
      "op": "SWAP4"
    },
    "1697": {
      "op": "POP"
    },
    "1698": {
      "op": "POP"
    },
    "1699": {
      "op": "POP"
    },
    "1700": {
      "op": "JUMP"
    },
    "1701": {
      "op": "JUMPDEST"
    },
    "1702": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1704": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1706": {
      "op": "DUP1"
    },
    "1707": {
      "op": "DUP4"
    },
    "1708": {
      "op": "MSTORE"
    },
    "1709": {
      "op": "DUP4"
    },
    "1710": {
      "op": "MLOAD"
    },
    "1711": {
      "op": "DUP1"
    },
    "1712": {
      "op": "DUP3"
    },
    "1713": {
      "op": "DUP6"
    },
    "1714": {
      "op": "ADD"
    },
    "1715": {
      "op": "MSTORE"
    },
    "1716": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1718": {
      "op": "JUMPDEST"
    },
    "1719": {
      "op": "DUP2"
    },
    "1720": {
      "op": "DUP2"
    },
    "1721": {
      "op": "LT"
    },
    "1722": {
      "op": "ISZERO"
    },
    "1723": {
      "op": "PUSH2",
      "value": "0x6D2"
    },
    "1726": {
      "op": "JUMPI"
    },
    "1727": {
      "op": "DUP6"
    },
    "1728": {
      "op": "DUP2"
    },
    "1729": {
      "op": "ADD"
    },
    "1730": {
      "op": "DUP4"
    },
    "1731": {
      "op": "ADD"
    },
    "1732": {
      "op": "MLOAD"
    },
    "1733": {
      "op": "DUP6"
    },
    "1734": {
      "op": "DUP3"
    },
    "1735": {
      "op": "ADD"
    },
    "1736": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1738": {
      "op": "ADD"
    },
    "1739": {
      "op": "MSTORE"
    },
    "1740": {
      "op": "DUP3"
    },
    "1741": {
      "op": "ADD"
    },
    "1742": {
      "op": "PUSH2",
      "value": "0x6B6"
    },
    "1745": {
      "op": "JUMP"
    },
    "1746": {
      "op": "JUMPDEST"
    },
    "1747": {
      "op": "DUP2"
    },
    "1748": {
      "op": "DUP2"
    },
    "1749": {
      "op": "GT"
    },
    "1750": {
      "op": "ISZERO"
    },
    "1751": {
      "op": "PUSH2",
      "value": "0x6E4"
    },
    "1754": {
      "op": "JUMPI"
    },
    "1755": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1757": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1759": {
      "op": "DUP4"
    },
    "1760": {
      "op": "DUP8"
    },
    "1761": {
      "op": "ADD"
    },
    "1762": {
      "op": "ADD"
    },
    "1763": {
      "op": "MSTORE"
    },
    "1764": {
      "op": "JUMPDEST"
    },
    "1765": {
      "op": "POP"
    },
    "1766": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1768": {
      "op": "ADD"
    },
    "1769": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1771": {
      "op": "NOT"
    },
    "1772": {
      "op": "AND"
    },
    "1773": {
      "op": "SWAP3"
    },
    "1774": {
      "op": "SWAP1"
    },
    "1775": {
      "op": "SWAP3"
    },
    "1776": {
      "op": "ADD"
    },
    "1777": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1779": {
      "op": "ADD"
    },
    "1780": {
      "jump": "o",
      "op": "SWAP4"
    },
    "1781": {
      "op": "SWAP3"
    },
    "1782": {
      "op": "POP"
    },
    "1783": {
      "op": "POP"
    },
    "1784": {
      "op": "POP"
    },
    "1785": {
      "op": "JUMP"
    },
    "1786": {
      "op": "JUMPDEST"
    },
    "1787": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1789": {
      "op": "DUP3"
    },
    "1790": {
      "op": "NOT"
    },
    "1791": {
      "op": "DUP3"
    },
    "1792": {
      "op": "GT"
    },
    "1793": {
      "jump": "i",
      "op": "ISZERO"
    },
    "1794": {
      "op": "PUSH2",
      "value": "0x70D"
    },
    "1797": {
      "op": "JUMPI"
    },
    "1798": {
      "op": "PUSH2",
      "value": "0x70D"
    },
    "1801": {
      "op": "PUSH2",
      "value": "0x81F"
    },
    "1804": {
      "jump": "o",
      "op": "JUMP"
    },
    "1805": {
      "op": "JUMPDEST"
    },
    "1806": {
      "op": "POP"
    },
    "1807": {
      "op": "ADD"
    },
    "1808": {
      "op": "SWAP1"
    },
    "1809": {
      "op": "JUMP"
    },
    "1810": {
      "op": "JUMPDEST"
    },
    "1811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1813": {
      "op": "DUP2"
    },
    "1814": {
      "op": "DUP2"
    },
    "1815": {
      "op": "JUMPDEST"
    },
    "1816": {
      "op": "DUP1"
    },
    "1817": {
      "op": "DUP6"
    },
    "1818": {
      "op": "GT"
    },
    "1819": {
      "op": "ISZERO"
    },
    "1820": {
      "op": "PUSH2",
      "value": "0x74D"
    },
    "1823": {
      "op": "JUMPI"
    },
    "1824": {
      "op": "DUP2"
    },
    "1825": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1827": {
      "op": "NOT"
    },
    "1828": {
      "op": "DIV"
    },
    "1829": {
      "op": "DUP3"
    },
    "1830": {
      "op": "GT"
    },
    "1831": {
      "jump": "i",
      "op": "ISZERO"
    },
    "1832": {
      "op": "PUSH2",
      "value": "0x733"
    },
    "1835": {
      "op": "JUMPI"
    },
    "1836": {
      "op": "PUSH2",
      "value": "0x733"
    },
    "1839": {
      "op": "PUSH2",
      "value": "0x81F"
    },
    "1842": {
      "op": "JUMP"
    },
    "1843": {
      "op": "JUMPDEST"
    },
    "1844": {
      "op": "DUP1"
    },
    "1845": {
      "op": "DUP6"
    },
    "1846": {
      "op": "AND"
    },
    "1847": {
      "op": "ISZERO"
    },
    "1848": {
      "op": "PUSH2",
      "value": "0x740"
    },
    "1851": {
      "op": "JUMPI"
    },
    "1852": {
      "op": "SWAP2"
    },
    "1853": {
      "op": "DUP2"
    },
    "1854": {
      "op": "MUL"
    },
    "1855": {
      "op": "SWAP2"
    },
    "1856": {
      "op": "JUMPDEST"
    },
    "1857": {
      "op": "SWAP4"
    },
    "1858": {
      "op": "DUP5"
    },
    "1859": {
      "op": "SHR"
    },
    "1860": {
      "op": "SWAP4"
    },
    "1861": {
      "op": "SWAP1"
    },
    "1862": {
      "op": "DUP1"
    },
    "1863": {
      "op": "MUL"
    },
    "1864": {
      "op": "SWAP1"
    },
    "1865": {
      "op": "PUSH2",
      "value": "0x717"
    },
    "1868": {
      "op": "JUMP"
    },
    "1869": {
      "op": "JUMPDEST"
    },
    "1870": {
      "op": "POP"
    },
    "1871": {
      "jump": "o",
      "op": "SWAP3"
    },
    "1872": {
      "op": "POP"
    },
    "1873": {
      "op": "SWAP3"
    },
    "1874": {
      "op": "SWAP1"
    },
    "1875": {
      "op": "POP"
    },
    "1876": {
      "op": "JUMP"
    },
    "1877": {
      "op": "JUMPDEST"
    },
    "1878": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1880": {
      "op": "PUSH2",
      "value": "0x605"
    },
    "1883": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1885": {
      "op": "DUP5"
    },
    "1886": {
      "op": "AND"
    },
    "1887": {
      "op": "DUP4"
    },
    "1888": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1890": {
      "op": "DUP3"
    },
    "1891": {
      "op": "PUSH2",
      "value": "0x76E"
    },
    "1894": {
      "op": "JUMPI"
    },
    "1895": {
      "op": "POP"
    },
    "1896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1898": {
      "op": "PUSH2",
      "value": "0x1FC"
    },
    "1901": {
      "op": "JUMP"
    },
    "1902": {
      "op": "JUMPDEST"
    },
    "1903": {
      "op": "DUP2"
    },
    "1904": {
      "op": "PUSH2",
      "value": "0x77B"
    },
    "1907": {
      "op": "JUMPI"
    },
    "1908": {
      "op": "POP"
    },
    "1909": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1911": {
      "op": "PUSH2",
      "value": "0x1FC"
    },
    "1914": {
      "op": "JUMP"
    },
    "1915": {
      "op": "JUMPDEST"
    },
    "1916": {
      "op": "DUP2"
    },
    "1917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1919": {
      "op": "DUP2"
    },
    "1920": {
      "op": "EQ"
    },
    "1921": {
      "op": "PUSH2",
      "value": "0x791"
    },
    "1924": {
      "op": "JUMPI"
    },
    "1925": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1927": {
      "op": "DUP2"
    },
    "1928": {
      "op": "EQ"
    },
    "1929": {
      "op": "PUSH2",
      "value": "0x79B"
    },
    "1932": {
      "op": "JUMPI"
    },
    "1933": {
      "op": "PUSH2",
      "value": "0x7B7"
    },
    "1936": {
      "op": "JUMP"
    },
    "1937": {
      "op": "JUMPDEST"
    },
    "1938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1940": {
      "op": "SWAP2"
    },
    "1941": {
      "op": "POP"
    },
    "1942": {
      "op": "POP"
    },
    "1943": {
      "op": "PUSH2",
      "value": "0x1FC"
    },
    "1946": {
      "op": "JUMP"
    },
    "1947": {
      "op": "JUMPDEST"
    },
    "1948": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1950": {
      "op": "DUP5"
    },
    "1951": {
      "op": "GT"
    },
    "1952": {
      "jump": "i",
      "op": "ISZERO"
    },
    "1953": {
      "op": "PUSH2",
      "value": "0x7AC"
    },
    "1956": {
      "op": "JUMPI"
    },
    "1957": {
      "op": "PUSH2",
      "value": "0x7AC"
    },
    "1960": {
      "op": "PUSH2",
      "value": "0x81F"
    },
    "1963": {
      "op": "JUMP"
    },
    "1964": {
      "op": "JUMPDEST"
    },
    "1965": {
      "op": "POP"
    },
    "1966": {
      "op": "POP"
    },
    "1967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1969": {
      "op": "DUP3"
    },
    "1970": {
      "op": "SHL"
    },
    "1971": {
      "op": "PUSH2",
      "value": "0x1FC"
    },
    "1974": {
      "op": "JUMP"
    },
    "1975": {
      "op": "JUMPDEST"
    },
    "1976": {
      "op": "POP"
    },
    "1977": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1979": {
      "op": "DUP4"
    },
    "1980": {
      "op": "LT"
    },
    "1981": {
      "op": "PUSH2",
      "value": "0x133"
    },
    "1984": {
      "op": "DUP4"
    },
    "1985": {
      "op": "LT"
    },
    "1986": {
      "op": "AND"
    },
    "1987": {
      "op": "PUSH1",
      "value": "0x4E"
    },
    "1989": {
      "op": "DUP5"
    },
    "1990": {
      "op": "LT"
    },
    "1991": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "1993": {
      "op": "DUP5"
    },
    "1994": {
      "op": "LT"
    },
    "1995": {
      "op": "AND"
    },
    "1996": {
      "op": "OR"
    },
    "1997": {
      "op": "ISZERO"
    },
    "1998": {
      "op": "PUSH2",
      "value": "0x7DA"
    },
    "2001": {
      "op": "JUMPI"
    },
    "2002": {
      "op": "POP"
    },
    "2003": {
      "op": "DUP2"
    },
    "2004": {
      "op": "DUP2"
    },
    "2005": {
      "op": "EXP"
    },
    "2006": {
      "op": "PUSH2",
      "value": "0x1FC"
    },
    "2009": {
      "op": "JUMP"
    },
    "2010": {
      "jump": "i",
      "op": "JUMPDEST"
    },
    "2011": {
      "op": "PUSH2",
      "value": "0x7E4"
    },
    "2014": {
      "op": "DUP4"
    },
    "2015": {
      "op": "DUP4"
    },
    "2016": {
      "op": "PUSH2",
      "value": "0x712"
    },
    "2019": {
      "op": "JUMP"
    },
    "2020": {
      "op": "JUMPDEST"
    },
    "2021": {
      "op": "DUP1"
    },
    "2022": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2024": {
      "op": "NOT"
    },
    "2025": {
      "op": "DIV"
    },
    "2026": {
      "op": "DUP3"
    },
    "2027": {
      "op": "GT"
    },
    "2028": {
      "jump": "i",
      "op": "ISZERO"
    },
    "2029": {
      "op": "PUSH2",
      "value": "0x7F8"
    },
    "2032": {
      "op": "JUMPI"
    },
    "2033": {
      "op": "PUSH2",
      "value": "0x7F8"
    },
    "2036": {
      "op": "PUSH2",
      "value": "0x81F"
    },
    "2039": {
      "op": "JUMP"
    },
    "2040": {
      "op": "JUMPDEST"
    },
    "2041": {
      "op": "MUL"
    },
    "2042": {
      "jump": "o",
      "op": "SWAP4"
    },
    "2043": {
      "op": "SWAP3"
    },
    "2044": {
      "op": "POP"
    },
    "2045": {
      "op": "POP"
    },
    "2046": {
      "op": "POP"
    },
    "2047": {
      "op": "JUMP"
    },
    "2048": {
      "op": "JUMPDEST"
    },
    "2049": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2051": {
      "op": "DUP2"
    },
    "2052": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2054": {
      "op": "NOT"
    },
    "2055": {
      "op": "DIV"
    },
    "2056": {
      "op": "DUP4"
    },
    "2057": {
      "op": "GT"
    },
    "2058": {
      "op": "DUP3"
    },
    "2059": {
      "op": "ISZERO"
    },
    "2060": {
      "op": "ISZERO"
    },
    "2061": {
      "op": "AND"
    },
    "2062": {
      "jump": "i",
      "op": "ISZERO"
    },
    "2063": {
      "op": "PUSH2",
      "value": "0x81A"
    },
    "2066": {
      "op": "JUMPI"
    },
    "2067": {
      "op": "PUSH2",
      "value": "0x81A"
    },
    "2070": {
      "op": "PUSH2",
      "value": "0x81F"
    },
    "2073": {
      "jump": "o",
      "op": "JUMP"
    },
    "2074": {
      "op": "JUMPDEST"
    },
    "2075": {
      "op": "POP"
    },
    "2076": {
      "op": "MUL"
    },
    "2077": {
      "op": "SWAP1"
    },
    "2078": {
      "op": "JUMP"
    },
    "2079": {
      "op": "JUMPDEST"
    },
    "2080": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2085": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2087": {
      "op": "SHL"
    },
    "2088": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2090": {
      "op": "MSTORE"
    },
    "2091": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2093": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2095": {
      "op": "MSTORE"
    },
    "2096": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2098": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2100": {
      "op": "REVERT"
    }
  },
  "sha1": "f9ab637a715e7da29b245c7e65f480f428788ac3",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.5;\n\nimport \"./IERC20.sol\";\n\n// Vega token\n// max supply is minted at genesis and allocated to buckets\n// since erc20 standard has no conventions for circulating and total supply we define\n// max supply: number of tokens that will ever exist (cap)\n// total supply: erc20 convention. since all tokens are created at genesis total supply is max supply\n// circulating supply: number of tokens in public circulation (not vested)\n\n//require(!paused(), \"ERC20Pausable: token transfer while paused\");\ncontract VegaToken is IERC20 {\n    uint8 public constant DECIMALS = 18;\n\n    uint256 public constant MAX_SUPPLY = 10**9 * (10**DECIMALS);\n\n    string private constant _name = \"VegaToken\";\n    string private constant _symbol = \"VEGA\";\n\n    address private _owner;\n\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    //erc20 standard\n    uint256 private _totalSupply;\n\n    //circulating supply of vega\n    //uint256 private _circSupply;\n\n    //locked supply of vega\n    //uint256 private _lockedSupply;\n\n    event TransferCirculate(\n        address indexed from,\n        address indexed to,\n        uint256 value\n    );\n    event TransferLocking(\n        address indexed from,\n        address indexed to,\n        uint256 value\n    );\n\n    //event TransferVested(address indexed from, address indexed to, uint256 value);\n\n    /// construct token and genesis mint\n    constructor() {\n        _owner = msg.sender;\n        //require(account != address(0), \"ERC20: mint to the zero address\");\n        // create the max supply once, all other calls are transfers\n        _totalSupply = MAX_SUPPLY;\n        _balances[_owner] = MAX_SUPPLY;\n        emit Transfer(address(0), _owner, MAX_SUPPLY);\n        //_circSupply = 0;\n        //_lockedSupply = MAX_SUPPLY;\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == _owner, \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    function decimals() public view virtual returns (uint8) {\n        return DECIMALS;\n    }\n\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    // function circulatingSupply() public view virtual returns (uint256) {\n    //     return _circSupply;\n    // }\n\n    // function lockedSupply() public view virtual returns (uint256) {\n    //     return _lockedSupply;\n    // }\n\n    function balanceOf(address account)\n        public\n        view\n        virtual\n        override\n        returns (uint256)\n    {\n        return _balances[account];\n    }\n\n    //transfer to recipient, which will be vested, supply will go out of circulation\n    // function transferToVested(address recipient, uint256 amount)\n    //     public\n    //     virtual\n    //     onlyOwner\n    // {\n    //     //TODO!\n    //     //get the vesting bucket make sure we have access\n    //     _transfer(msg.sender, recipient, amount);\n    //     //emit TransferLocking()\n    //     _lockedSupply += amount;\n    // }\n\n    // //transfer to recipient from vesting\n    // function transferCirculating(address recipient, uint256 amount) public virtual onlyOwner {\n    //     //_transfer(msg.sender, recipient, amount);\n    //     //_circSupply += amount\n    // }\n\n    /**\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount)\n        public\n        virtual\n        override\n        returns (bool)\n    {\n        _transfer(msg.sender, recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender)\n        public\n        view\n        virtual\n        override\n        returns (uint256)\n    {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount)\n        public\n        virtual\n        override\n        returns (bool)\n    {\n        _approve(msg.sender, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n\n        uint256 currentAllowance = _allowances[sender][msg.sender];\n        require(\n            currentAllowance >= amount,\n            \"ERC20: transfer amount exceeds allowance\"\n        );\n        unchecked {\n            _approve(sender, msg.sender, currentAllowance - amount);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        uint256 senderBalance = _balances[sender];\n        require(\n            senderBalance >= amount,\n            \"ERC20: transfer amount exceeds balance\"\n        );\n        unchecked {\n            _balances[sender] = senderBalance - amount;\n        }\n        _balances[recipient] += amount;\n\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     * https://ethereum.stackexchange.com/questions/13523/what-is-the-zero-account-as-described-by-the-solidity-docs\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n}\n",
  "sourceMap": "547:6886:5:-:0;;;1490:391;;;;;;;;;-1:-1:-1;1514:6:5;:19;;-1:-1:-1;;;;;;1514:19:5;1523:10;1514:19;;;670:12;615:2;670;:12;:::i;:::-;661:22;;:5;:22;:::i;:::-;1689:12;:25;670:12;615:2;670;:12;:::i;:::-;661:22;;:5;:22;:::i;:::-;1724:17;1734:6;;-1:-1:-1;;;;;1734:6:5;;;1724:17;;-1:-1:-1;1724:17:5;;;;;:30;;;;1790:6;;;;;;1769:40;670:12;615:2;670;:12;:::i;:::-;661:22;;:5;:22;:::i;:::-;1769:40;;160:25:10;;;148:2;133:18;1769:40:5;;;;;;;547:6886;;196:422:10;285:1;328:5;285:1;342:270;363:7;353:8;350:21;342:270;;;422:4;418:1;414:6;410:17;404:4;401:27;398:2;;;431:18;;:::i;:::-;481:7;471:8;467:22;464:2;;;501:16;;;;464:2;580:22;;;;540:15;;;;342:270;;;346:3;260:358;;;;;:::o;623:140::-;681:5;710:47;751:4;741:8;737:19;731:4;710:47;:::i;:::-;701:56;691:72;-1:-1:-1;;;691:72:10:o;768:806::-;817:5;847:8;837:2;;-1:-1:-1;888:1:10;902:5;;837:2;936:4;926:2;;-1:-1:-1;973:1:10;987:5;;926:2;1018:4;1036:1;1031:59;;;;1104:1;1099:130;;;;1011:218;;1031:59;1061:1;1052:10;;1075:5;;;1099:130;1136:3;1126:8;1123:17;1120:2;;;1143:18;;:::i;:::-;-1:-1:-1;;1199:1:10;1185:16;;1214:5;;1011:218;;1313:2;1303:8;1300:16;1294:3;1288:4;1285:13;1281:36;1275:2;1265:8;1262:16;1257:2;1251:4;1248:12;1244:35;1241:77;1238:2;;;-1:-1:-1;1350:19:10;;;1382:5;;1238:2;1429:34;1454:8;1448:4;1429:34;:::i;:::-;1499:6;1495:1;1491:6;1487:19;1478:7;1475:32;1472:2;;;1510:18;;:::i;:::-;1548:20;;-1:-1:-1;827:747:10;;;;;:::o;1579:168::-;1619:7;1685:1;1681;1677:6;1673:14;1670:1;1667:21;1662:1;1655:9;1648:17;1644:45;1641:2;;;1692:18;;:::i;:::-;-1:-1:-1;1732:9:10;;1631:116::o;1752:127::-;1813:10;1808:3;1804:20;1801:1;1794:31;1844:4;1841:1;1834:15;1868:4;1865:1;1858:15;1784:95;547:6886:5;;;;;;",
  "sourcePath": "contracts/VegaToken.sol",
  "type": "contract"
}