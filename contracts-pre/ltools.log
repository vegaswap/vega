2021-08-26 12:41:18.532 | INFO     | vyper.cli.vyper_compile:<module>:50 - yes
2021-08-26 12:41:18.532 | INFO     | vyper.cli.vyper_compile:_parse_cli_args:84 - start compiler
2021-08-26 12:41:18.532 | INFO     | vyper.cli.vyper_compile:_parse_cli_args:85 - start compiler
2021-08-26 12:41:18.532 | INFO     | vyper.cli.vyper_compile:_parse_args:90 - _parse_args
2021-08-26 12:41:28.483 | INFO     | vyper.cli.vyper_compile:<module>:50 - yes
2021-08-26 12:41:28.483 | INFO     | vyper.cli.vyper_compile:_parse_cli_args:84 - start compiler
2021-08-26 12:41:28.483 | INFO     | vyper.cli.vyper_compile:_parse_cli_args:85 - start compiler
2021-08-26 12:41:28.483 | INFO     | vyper.cli.vyper_compile:_parse_args:90 - _parse_args
2021-08-26 12:41:28.483 | INFO     | vyper.cli.vyper_compile:_parse_args:158 - compile_files
2021-08-26 12:41:28.484 | INFO     | vyper.cli.vyper_compile:compile_files:242 - input_files ['Vestingmath.vy']
2021-08-26 12:41:28.484 | INFO     | vyper.cli.vyper_compile:compile_files:243 - output_formats ('bytecode',)
2021-08-26 12:41:28.484 | INFO     | vyper.cli.vyper_compile:compile_files:253 - # input_files 1
2021-08-26 12:41:28.484 | INFO     | vyper.cli.vyper_compile:compile_files:255 - file_name Vestingmath.vy
2021-08-26 12:41:28.484 | INFO     | vyper.cli.vyper_compile:compile_files:276 - contract_sources: OrderedDict([('Vestingmath.vy', '# @version ^0.2.14\n\ndays: constant(uint256) = 2592000\nDEFAULT_PERIOD: constant(uint256) = 30 * days\n\n@internal\ndef ceildiv(a: uint256, m: uint256) -> uint256:\n    t: uint256 = a % m\n    if t == 0:\n        return a / m\n    else:\n        return (a + (m - t)) / m\n\n@internal\ndef linearFrom(\n    _amountPerPeriod: uint256,\n    _totalAmount: uint256,\n    _period: uint256,\n) -> uint256:\n    return _period * (self.ceildiv(_totalAmount, _amountPerPeriod))\n\n\n@internal\ndef getEndTimeI(\n    _cliffTime: uint256,\n    _amountPerPeriod: uint256,\n    _totalAmount: uint256,\n    _period: uint256,\n) -> uint256:\n    # return _cliffTime + (_period * (self.ceildiv(_totalAmount, _amountPerPeriod)))\n    return _cliffTime + self.linearFrom(_amountPerPeriod, _totalAmount, _period)\n\n@external\ndef getEndTime(\n    _cliffTime: uint256, _amountPerPeriod: uint256, _totalAmount: uint256\n) -> uint256:\n    return self.getEndTimeI(_cliffTime, _amountPerPeriod, _totalAmount, DEFAULT_PERIOD)\n\n\n@internal\ndef getVestedAmountPeriodI(\n    blocktime: uint256,\n    cliffTime: uint256,\n    endTime: uint256,\n    amountPerPeriod: uint256,\n    totalAmount: uint256,\n    period: uint256,\n) -> uint256:\n    if blocktime >= endTime:\n        return totalAmount\n\n    if blocktime < cliffTime:\n        return 0\n\n    timeSinceCliff: uint256 = blocktime - cliffTime\n    # // at cliff, one amount is withdrawable\n    validPeriodCount: uint256 = timeSinceCliff / period + 1\n    potentialReturned: uint256 = validPeriodCount * amountPerPeriod\n\n    if potentialReturned > totalAmount:\n        return totalAmount\n\n    return potentialReturned\n\n\n@external\ndef getVestedAmountPeriod(\n    blocktime: uint256,\n    cliffTime: uint256,\n    endTime: uint256,\n    amountPerPeriod: uint256,\n    totalAmount: uint256,\n) -> uint256:\n\n    return self.getVestedAmountPeriodI(\n        blocktime, cliffTime, endTime, amountPerPeriod, totalAmount, DEFAULT_PERIOD\n    )\n')])
2021-08-26 12:41:28.538 | INFO     | vyper.cli.vyper_compile:_parse_args:167 - compiled
2021-08-26 12:41:34.227 | INFO     | vyper.cli.vyper_compile:<module>:50 - yes
2021-08-26 12:41:34.227 | INFO     | vyper.cli.vyper_compile:_parse_cli_args:84 - start compiler
2021-08-26 12:41:34.227 | INFO     | vyper.cli.vyper_compile:_parse_cli_args:85 - start compiler
2021-08-26 12:41:34.227 | INFO     | vyper.cli.vyper_compile:_parse_args:90 - _parse_args
2021-08-26 12:41:34.227 | INFO     | vyper.cli.vyper_compile:_parse_args:158 - compile_files
2021-08-26 12:41:34.227 | INFO     | vyper.cli.vyper_compile:compile_files:242 - input_files ['Vestingmath.vy']
2021-08-26 12:41:34.227 | INFO     | vyper.cli.vyper_compile:compile_files:243 - output_formats ('bytecode',)
2021-08-26 12:41:34.228 | INFO     | vyper.cli.vyper_compile:compile_files:253 - # input_files 1
2021-08-26 12:41:34.228 | INFO     | vyper.cli.vyper_compile:compile_files:255 - file_name Vestingmath.vy
2021-08-26 12:41:34.228 | INFO     | vyper.cli.vyper_compile:compile_files:276 - contract_sources: OrderedDict([('Vestingmath.vy', '# @version ^0.2.14\n\ndays: constant(uint256) = 2592000\nDEFAULT_PERIOD: constant(uint256) = 30 * days\n\n@internal\ndef ceildiv(a: uint256, m: uint256) -> uint256:\n    t: uint256 = a % m\n    if t == 0:\n        return a / m\n    else:\n        return (a + (m - t)) / m\n\n@internal\ndef linearFrom(\n    _amountPerPeriod: uint256,\n    _totalAmount: uint256,\n    _period: uint256,\n) -> uint256:\n    return _period * (self.ceildiv(_totalAmount, _amountPerPeriod))\n\n\n@internal\ndef getEndTimeI(\n    _cliffTime: uint256,\n    _amountPerPeriod: uint256,\n    _totalAmount: uint256,\n    _period: uint256,\n) -> uint256:\n    # return _cliffTime + (_period * (self.ceildiv(_totalAmount, _amountPerPeriod)))\n    return _cliffTime + self.linearFrom(_amountPerPeriod, _totalAmount, _period)\n\n@external\ndef getEndTime(\n    _cliffTime: uint256, _amountPerPeriod: uint256, _totalAmount: uint256\n) -> uint256:\n    return self.getEndTimeI(_cliffTime, _amountPerPeriod, _totalAmount, DEFAULT_PERIOD)\n\n\n@internal\ndef getVestedAmountPeriodI(\n    blocktime: uint256,\n    cliffTime: uint256,\n    endTime: uint256,\n    amountPerPeriod: uint256,\n    totalAmount: uint256,\n    period: uint256,\n) -> uint256:\n    if blocktime >= endTime:\n        return totalAmount\n\n    if blocktime < cliffTime:\n        return 0\n\n    timeSinceCliff: uint256 = blocktime - cliffTime\n    # // at cliff, one amount is withdrawable\n    validPeriodCount: uint256 = timeSinceCliff / period + 1\n    potentialReturned: uint256 = validPeriodCount * amountPerPeriod\n\n    if potentialReturned > totalAmount:\n        return totalAmount\n\n    return potentialReturned\n\n\n@external\ndef getVestedAmountPeriod(\n    blocktime: uint256,\n    cliffTime: uint256,\n    endTime: uint256,\n    amountPerPeriod: uint256,\n    totalAmount: uint256,\n) -> uint256:\n\n    return self.getVestedAmountPeriodI(\n        blocktime, cliffTime, endTime, amountPerPeriod, totalAmount, DEFAULT_PERIOD\n    )\n')])
2021-08-26 12:41:34.281 | INFO     | vyper.cli.vyper_compile:_parse_args:167 - compiled
2021-08-26 12:41:40.561 | INFO     | vyper.cli.vyper_compile:<module>:50 - yes
2021-08-26 12:41:40.561 | INFO     | vyper.cli.vyper_compile:_parse_cli_args:84 - start compiler
2021-08-26 12:41:40.561 | INFO     | vyper.cli.vyper_compile:_parse_cli_args:85 - start compiler
2021-08-26 12:41:40.561 | INFO     | vyper.cli.vyper_compile:_parse_args:90 - _parse_args
2021-08-26 12:41:40.562 | INFO     | vyper.cli.vyper_compile:_parse_args:158 - compile_files
2021-08-26 12:41:40.562 | INFO     | vyper.cli.vyper_compile:compile_files:242 - input_files ['Vestingmath.vy']
2021-08-26 12:41:40.562 | INFO     | vyper.cli.vyper_compile:compile_files:243 - output_formats ('abi',)
2021-08-26 12:41:40.562 | INFO     | vyper.cli.vyper_compile:compile_files:253 - # input_files 1
2021-08-26 12:41:40.562 | INFO     | vyper.cli.vyper_compile:compile_files:255 - file_name Vestingmath.vy
2021-08-26 12:41:40.562 | INFO     | vyper.cli.vyper_compile:compile_files:276 - contract_sources: OrderedDict([('Vestingmath.vy', '# @version ^0.2.14\n\ndays: constant(uint256) = 2592000\nDEFAULT_PERIOD: constant(uint256) = 30 * days\n\n@internal\ndef ceildiv(a: uint256, m: uint256) -> uint256:\n    t: uint256 = a % m\n    if t == 0:\n        return a / m\n    else:\n        return (a + (m - t)) / m\n\n@internal\ndef linearFrom(\n    _amountPerPeriod: uint256,\n    _totalAmount: uint256,\n    _period: uint256,\n) -> uint256:\n    return _period * (self.ceildiv(_totalAmount, _amountPerPeriod))\n\n\n@internal\ndef getEndTimeI(\n    _cliffTime: uint256,\n    _amountPerPeriod: uint256,\n    _totalAmount: uint256,\n    _period: uint256,\n) -> uint256:\n    # return _cliffTime + (_period * (self.ceildiv(_totalAmount, _amountPerPeriod)))\n    return _cliffTime + self.linearFrom(_amountPerPeriod, _totalAmount, _period)\n\n@external\ndef getEndTime(\n    _cliffTime: uint256, _amountPerPeriod: uint256, _totalAmount: uint256\n) -> uint256:\n    return self.getEndTimeI(_cliffTime, _amountPerPeriod, _totalAmount, DEFAULT_PERIOD)\n\n\n@internal\ndef getVestedAmountPeriodI(\n    blocktime: uint256,\n    cliffTime: uint256,\n    endTime: uint256,\n    amountPerPeriod: uint256,\n    totalAmount: uint256,\n    period: uint256,\n) -> uint256:\n    if blocktime >= endTime:\n        return totalAmount\n\n    if blocktime < cliffTime:\n        return 0\n\n    timeSinceCliff: uint256 = blocktime - cliffTime\n    # // at cliff, one amount is withdrawable\n    validPeriodCount: uint256 = timeSinceCliff / period + 1\n    potentialReturned: uint256 = validPeriodCount * amountPerPeriod\n\n    if potentialReturned > totalAmount:\n        return totalAmount\n\n    return potentialReturned\n\n\n@external\ndef getVestedAmountPeriod(\n    blocktime: uint256,\n    cliffTime: uint256,\n    endTime: uint256,\n    amountPerPeriod: uint256,\n    totalAmount: uint256,\n) -> uint256:\n\n    return self.getVestedAmountPeriodI(\n        blocktime, cliffTime, endTime, amountPerPeriod, totalAmount, DEFAULT_PERIOD\n    )\n')])
2021-08-26 12:41:40.612 | INFO     | vyper.cli.vyper_compile:_parse_args:167 - compiled
